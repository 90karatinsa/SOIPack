openapi: 3.0.3
info:
  title: SOIPack REST API
  version: 0.1.0
  description: |
    SOIPack çalışma akışlarını HTTPS üzerinden tetikleyen REST arayüzü. Sunucu yalnızca TLS sertifikası ve anahtarı sağlandığında başlatılır; düz HTTP dinleyicileri desteklenmez. Uygulama IP ve kiracı bazında oran sınırlaması uygular ve JSON gövdeleri için maksimum boyut denetimi yapar.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.soipack.dev
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: OIDC sağlayıcısı tarafından imzalanmış, tenant kimliği içeren erişim belirteci.
  parameters:
    LicenseHeader:
      name: X-SOIPACK-License
      in: header
      required: false
      description: |
        Base64 kodlanmış lisans anahtarı. Import isteklerinde alternatif olarak `license` dosya alanı kullanılabilir.
        İçerik `SOIPACK_LICENSE_MAX_BYTES`/`SOIPACK_LICENSE_HEADER_MAX_BYTES` sınırlarını aşarsa
        istek `413 LICENSE_TOO_LARGE` yanıtıyla reddedilir.
      schema:
        type: string
  schemas:
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              description: Hata ile ilgili ek bilgiler.
              additionalProperties: true
    StorageHealthResponse:
      type: object
      required:
        - provider
        - status
        - database
      properties:
        provider:
          type: string
          description: Aktif depolama sağlayıcısının sınıf adı veya tanımlayıcısı.
        status:
          type: string
          enum:
            - ok
        database:
          type: object
          required:
            - latencyMs
          properties:
            latencyMs:
              type: number
              format: double
              description: Sağlık denetimi sırasında ölçülen veritabanı sorgu gecikmesi (ms).
    ImportResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - warnings
        - outputs
      properties:
        id:
          type: string
          description: Import işlemi için belirlenen hash tabanlı kimlik.
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
          description: İş daha önce tamamlanmışsa true döner.
        createdAt:
          type: string
          format: date-time
        warnings:
          type: array
          items:
            type: string
        outputs:
          type: object
          required:
            - directory
            - workspace
          properties:
            directory:
              type: string
              description: Sunucu depolama alanında oluşturulan çalışma dizini.
            workspace:
              type: string
              description: workspace.json dosyasının göreli yolu.
    AnalyzeResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - exitCode
        - outputs
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
        createdAt:
          type: string
          format: date-time
        exitCode:
          type: integer
        outputs:
          type: object
          required:
            - directory
            - snapshot
            - traces
            - analysis
          properties:
            directory:
              type: string
            snapshot:
              type: string
            traces:
              type: string
            analysis:
              type: string
    ReportResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - outputs
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
        createdAt:
          type: string
          format: date-time
        outputs:
          type: object
          required:
            - directory
            - complianceHtml
            - complianceJson
            - complianceCsv
            - traceHtml
            - traceCsv
            - gapsHtml
            - analysis
            - snapshot
            - traces
          properties:
            directory:
              type: string
            complianceHtml:
              type: string
            complianceJson:
              type: string
            complianceCsv:
              type: string
            traceHtml:
              type: string
            traceCsv:
              type: string
            gapsHtml:
              type: string
            analysis:
              type: string
            snapshot:
              type: string
            traces:
              type: string
            toolQualification:
              type: object
              nullable: true
              properties:
                summary:
                  type: object
    ImportConnectorPayload:
      type: object
      description: >-
        Uzak sistemlerden kanıt almak için kullanılan bağlayıcı yapılandırması. Sunucu, iş
        meta verisi ve günlük kayıtlarında gizli alanları "REDACTED" olarak maskeleyerek
        saklar.
      required:
        - type
        - options
      properties:
        type:
          type: string
          description: Kullanılacak bağlayıcının türü.
          enum:
            - polarion
            - jenkins
            - doorsNext
            - jama
            - jiraCloud
        options:
          description: Bağlayıcıya özgü kimlik doğrulama ve kapsam ayarları.
          oneOf:
            - $ref: '#/components/schemas/PolarionConnectorOptions'
            - $ref: '#/components/schemas/JenkinsConnectorOptions'
            - $ref: '#/components/schemas/DoorsNextConnectorOptions'
            - $ref: '#/components/schemas/JamaConnectorOptions'
            - $ref: '#/components/schemas/JiraCloudConnectorOptions'
    PolarionConnectorOptions:
      type: object
      description: Polarion ALM projelerinden gereksinim ve kanıt almak için gerekli ayarlar.
      required:
        - baseUrl
        - username
      properties:
        baseUrl:
          type: string
          format: uri
          description: Polarion sunucusunun taban URL’si.
        projectId:
          type: string
          description: Polarion proje kimliği. project alanı yerine kullanılabilir.
        project:
          type: string
          description: Polarion proje kısa adı. projectId alanı yerine kullanılabilir.
        username:
          type: string
          description: Polarion kullanıcı adı.
        password:
          type: string
          description: Polarion kullanıcısı için parola. token alanı yerine kullanılabilir.
        token:
          type: string
          description: Polarion erişim belirteci. password alanı yerine kullanılabilir.
    JenkinsConnectorOptions:
      type: object
      description: Jenkins işleri üzerinden artefakt indirmek için gerekli ayarlar.
      required:
        - baseUrl
        - job
        - username
      properties:
        baseUrl:
          type: string
          format: uri
          description: Jenkins sunucusunun taban URL’si.
        job:
          type: string
          description: Tetiklenecek Jenkins işinin adı.
        username:
          type: string
          description: Jenkins kullanıcısı.
        apiToken:
          type: string
          description: Jenkins API belirteci. token veya password yerine kullanılabilir.
        token:
          type: string
          description: Jenkins erişim belirteci. apiToken veya password yerine kullanılabilir.
        password:
          type: string
          description: Jenkins kullanıcısının parolası. apiToken veya token yerine kullanılabilir.
    DoorsNextOAuthOptions:
      type: object
      description: Doors Next OAuth 2.0 istemci kimlik bilgileri.
      required:
        - tokenUrl
        - clientId
        - clientSecret
      properties:
        tokenUrl:
          type: string
          format: uri
          description: OAuth belirteci almak için kullanılacak URL.
        clientId:
          type: string
          description: OAuth istemci kimliği.
        clientSecret:
          type: string
          description: OAuth istemci sırrı.
        scope:
          type: string
          description: İsteğe bağlı OAuth kapsam değeri.
    DoorsNextConnectorOptions:
      type: object
      description: IBM DOORS Next projeleri için kimlik doğrulama ve kapsam ayarları.
      required:
        - baseUrl
      properties:
        baseUrl:
          type: string
          format: uri
          description: DOORS Next sunucusunun taban URL’si.
        project:
          type: string
          description: İçe aktarılacak proje adı. projectArea alanı yerine kullanılabilir.
        projectArea:
          type: string
          description: İçe aktarılacak proje alanı. project alanı yerine kullanılabilir.
        username:
          type: string
          description: Temel kimlik doğrulaması için kullanıcı adı. password ile birlikte kullanılmalıdır.
        password:
          type: string
          description: Temel kimlik doğrulaması için parola. username ile birlikte kullanılmalıdır.
        accessToken:
          type: string
          description: DOORS Next erişim belirteci. username/password veya oauth yerine kullanılabilir.
        oauth:
          $ref: '#/components/schemas/DoorsNextOAuthOptions'
          description: OAuth 2.0 ile kimlik doğrulamak için istemci kimlik bilgileri.
    JamaConnectorOptions:
      type: object
      description: Jama Connect projeleriyle entegrasyon ayarları.
      required:
        - baseUrl
      properties:
        baseUrl:
          type: string
          format: uri
          description: Jama Connect sunucusunun taban URL’si.
        project:
          type: string
          description: İçe aktarılacak projenin kısa adı. projectId alanı yerine kullanılabilir.
        projectId:
          type: string
          description: İçe aktarılacak projenin kimliği. project alanı yerine kullanılabilir.
        clientId:
          type: string
          description: OAuth istemci kimliği. clientSecret ile birlikte kullanılmalıdır.
        clientSecret:
          type: string
          description: OAuth istemci sırrı. clientId ile birlikte kullanılmalıdır.
        apiToken:
          type: string
          description: Jama API belirteci. clientId/clientSecret yerine kullanılabilir.
    JiraCloudConnectorOptions:
      type: object
      description: Atlassian Jira Cloud projelerinden iş öğesi almak için gereken alanlar.
      required:
        - site
        - email
        - apiToken
        - projectKey
      properties:
        site:
          type: string
          description: Jira Cloud site alan adı (ör. example.atlassian.net).
        email:
          type: string
          format: email
          description: Jira Cloud kullanıcısının e-posta adresi.
        apiToken:
          type: string
          description: Atlassian API belirteci.
        projectKey:
          type: string
          description: Jira projesinin anahtar değeri.
        baseUrl:
          type: string
          format: uri
          description: Opsiyonel özel Jira taban URL’si. Varsayılan olarak site alan adı kullanılır.
                  required:
                    - generatedAt
                    - tools
                  properties:
                    generatedAt:
                      type: string
                      format: date-time
                    programName:
                      type: string
                      nullable: true
                    level:
                      type: string
                      nullable: true
                    author:
                      type: string
                      nullable: true
                    tools:
                      type: array
                      items:
                        type: object
                        required:
                          - id
                          - name
                          - category
                          - outputs
                          - pendingActivities
                        properties:
                          id:
                            type: string
                          name:
                            type: string
                          version:
                            type: string
                            nullable: true
                          category:
                            type: string
                            enum:
                              - development
                              - verification
                              - support
                          tql:
                            type: string
                            nullable: true
                          outputs:
                            type: array
                            items:
                              type: string
                          pendingActivities:
                            type: integer
                tqp:
                  type: string
                tar:
                  type: string
                tqpHref:
                  type: string
                tarHref:
                  type: string
    PackResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - manifestId
        - outputs
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
        createdAt:
          type: string
          format: date-time
        manifestId:
          type: string
          description: Paketlenmiş manifestin ilk 12 karakterlik SHA-256 özeti.
        manifestDigest:
          type: string
          description: Manifestin SHA-256 karması.
        ledgerRoot:
          type: string
          nullable: true
        previousLedgerRoot:
          type: string
          nullable: true
        cmsSignature:
          $ref: '#/components/schemas/CmsSignatureMetadata'
          nullable: true
        postQuantumSignature:
          $ref: '#/components/schemas/PostQuantumSignatureMetadata'
          nullable: true
        outputs:
          type: object
          required:
            - directory
            - manifest
            - archive
          properties:
            directory:
              type: string
            manifest:
              type: string
            archive:
              type: string
            cmsSignature:
              $ref: '#/components/schemas/CmsSignatureMetadata'
              nullable: true
            postQuantumSignature:
              $ref: '#/components/schemas/PostQuantumSignatureMetadata'
              nullable: true
    IngestPipelineResponse:
      type: object
      required:
        - status
        - reused
        - id
        - manifestId
        - manifestDigest
        - import
        - analyze
        - report
        - package
      properties:
        status:
          type: string
          enum: [completed]
          description: İşlem hattının yürütülme durumu.
        reused:
          type: boolean
          description: İşlem hattının daha önce üretilmiş sonuçları kullandığını belirtir.
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
          description: Paketleme işinin hash tabanlı kimliği.
        manifestId:
          type: string
          description: Üretilen manifestin kısa kimliği.
        manifestDigest:
          type: string
          description: Manifestin SHA-256 özeti.
        import:
          $ref: '#/components/schemas/IngestPipelineImportSummary'
        analyze:
          $ref: '#/components/schemas/IngestPipelineAnalyzeSummary'
        report:
          $ref: '#/components/schemas/IngestPipelineReportSummary'
        package:
          $ref: '#/components/schemas/IngestPipelinePackageSummary'
    IngestPipelineImportSummary:
      type: object
      required:
        - id
        - hash
        - createdAt
        - directory
        - workspace
        - warnings
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        hash:
          type: string
          description: Import işini belirleyen içerik karması.
        createdAt:
          type: string
          format: date-time
        directory:
          type: string
          description: Depolama sağlayıcısındaki import çalışma dizini.
        workspace:
          type: string
          description: workspace.json dosyasının göreli yolu.
        warnings:
          type: array
          items:
            type: string
    IngestPipelineAnalyzeSummary:
      type: object
      required:
        - id
        - hash
        - createdAt
        - directory
        - snapshot
        - analysis
        - traces
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        hash:
          type: string
          description: Analiz işinin içerik karması.
        createdAt:
          type: string
          format: date-time
        directory:
          type: string
        snapshot:
          type: string
          description: Compliance snapshot JSON dosyasının göreli yolu.
        analysis:
          type: string
          description: Analiz özeti JSON dosyasının göreli yolu.
        traces:
          type: string
          description: İzlenebilirlik çıktılarının göreli yolu.
    IngestPipelineReportSummary:
      type: object
      required:
        - id
        - hash
        - createdAt
        - directory
        - complianceHtml
        - complianceJson
        - complianceCsv
        - traceHtml
        - traceCsv
        - gapsHtml
        - analysis
        - snapshot
        - traces
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        hash:
          type: string
          description: Rapor işinin içerik karması.
        createdAt:
          type: string
          format: date-time
        directory:
          type: string
        complianceHtml:
          type: string
        complianceJson:
          type: string
        complianceCsv:
          type: string
        traceHtml:
          type: string
        traceCsv:
          type: string
        gapsHtml:
          type: string
        analysis:
          type: string
          description: Analiz özeti JSON dosyasının göreli yolu.
        snapshot:
          type: string
          description: Compliance snapshot JSON dosyasının göreli yolu.
        traces:
          type: string
          description: İzlenebilirlik çıktılarının göreli yolu.
    IngestPipelinePackageSummary:
      type: object
      required:
        - id
        - hash
        - createdAt
        - directory
        - manifest
        - archive
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        hash:
          type: string
          description: Paketleme işinin içerik karması.
        createdAt:
          type: string
          format: date-time
        directory:
          type: string
        manifest:
          type: string
        archive:
          type: string
        ledger:
          type: string
          nullable: true
          description: Paketlenen ledger arşivinin göreli yolu.
        ledgerRoot:
          type: string
          nullable: true
        previousLedgerRoot:
          type: string
          nullable: true
        cmsSignature:
          $ref: '#/components/schemas/CmsSignatureMetadata'
          nullable: true
        postQuantumSignature:
          $ref: '#/components/schemas/PostQuantumSignatureMetadata'
          nullable: true
    ReviewTarget:
      type: object
      required:
        - kind
      properties:
        kind:
          type: string
          enum:
            - analyze
            - report
            - pack
          description: İncelemenin ilişkilendirildiği işlem türü.
        reference:
          type: string
          nullable: true
          description: İşlemle ilişkilendirilen hedef kimlik (ör. import veya analysis kimliği).
    ReviewApprover:
      type: object
      required:
        - userId
        - status
      properties:
        userId:
          type: string
          description: İncelemeyi onaylaması gereken kullanıcı kimliği.
        status:
          type: string
          enum:
            - pending
            - approved
            - rejected
        decidedAt:
          type: string
          format: date-time
          nullable: true
          description: Onay veya red işleminin zamanı.
        note:
          type: string
          nullable: true
          description: Onay/ret sırasında bırakılan not.
    ReviewArtifact:
      type: object
      required:
        - id
        - label
        - provided
      properties:
        id:
          type: string
          description: Kanıt girdisinin benzersiz kimliği.
        label:
          type: string
          description: Gereken kanıtın kısa açıklaması.
        description:
          type: string
          nullable: true
          description: Kanıt için ek açıklama.
        provided:
          type: boolean
          description: Kanıtın sağlanıp sağlanmadığını belirtir.
        providedBy:
          type: string
          nullable: true
          description: Kanıtı sağlayan kullanıcı kimliği.
        providedAt:
          type: string
          format: date-time
          nullable: true
          description: Kanıtın yüklendiği zaman.
    ReviewChangeRequest:
      type: object
      required:
        - id
        - authorId
        - reason
        - createdAt
      properties:
        id:
          type: string
        authorId:
          type: string
        reason:
          type: string
        createdAt:
          type: string
          format: date-time
    ReviewResource:
      type: object
      required:
        - id
        - tenantId
        - status
        - target
        - approvers
        - requiredArtifacts
        - changeRequests
        - hash
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: İncelemenin benzersiz kimliği.
        tenantId:
          type: string
        status:
          type: string
          enum:
            - draft
            - pending
            - approved
            - rejected
          description: İncelemenin geçerli durumu.
        target:
          $ref: '#/components/schemas/ReviewTarget'
        approvers:
          type: array
          items:
            $ref: '#/components/schemas/ReviewApprover'
        requiredArtifacts:
          type: array
          items:
            $ref: '#/components/schemas/ReviewArtifact'
        changeRequests:
          type: array
          items:
            $ref: '#/components/schemas/ReviewChangeRequest'
        hash:
          type: string
          description: Eşzamanlı güncellemeleri koruyan hash kilidi.
        notes:
          type: string
          nullable: true
        reviewer:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    AuditLogEntry:
      type: object
      required:
        - id
        - tenantId
        - actor
        - action
        - createdAt
      properties:
        id:
          type: string
          description: Denetim kaydının benzersiz kimliği.
        tenantId:
          type: string
          description: Kaydın ait olduğu kiracı kimliği.
        actor:
          type: string
          description: Olayı tetikleyen kullanıcı veya sistem.
        action:
          type: string
          description: Gerçekleştirilen eylemin adı.
        target:
          type: string
          nullable: true
          description: Eylemin hedef kaynağı.
        payload:
          type: object
          nullable: true
          additionalProperties: true
          description: Eylemle ilişkili isteğe bağlı ek veriler.
        createdAt:
          type: string
          format: date-time
          description: Kaydın oluşturulma zamanı.
    AuditLogListResponse:
      type: object
      required:
        - items
        - hasMore
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogEntry'
        hasMore:
          type: boolean
          description: Daha fazla kayıt olup olmadığını belirtir.
        nextOffset:
          type: integer
          nullable: true
          description: Sonraki sayfa için ofset değeri.
    JobSummary:
      type: object
      required:
        - id
        - kind
        - status
        - hash
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        kind:
          type: string
          enum: [import, analyze, report, pack]
        status:
          type: string
          enum: [queued, running, completed, failed]
        hash:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    JobError:
      type: object
      required:
        - statusCode
        - code
        - message
      properties:
        statusCode:
          type: integer
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
    JobDetailsResponse:
      allOf:
        - $ref: '#/components/schemas/JobSummary'
        - type: object
          properties:
            result:
              type: object
              additionalProperties: true
              nullable: true
            error:
              $ref: '#/components/schemas/JobError'
              nullable: true
    JobListResponse:
      type: object
      required:
        - jobs
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobSummary'
    ComplianceCoverageSnapshot:
      type: object
      description: Kapsam yüzdeleri. Sağlanan değerler üç ondalık hassasiyete yuvarlanır.
      additionalProperties: false
      properties:
        statements:
          type: number
          format: double
          minimum: 0
        branches:
          type: number
          format: double
          minimum: 0
        functions:
          type: number
          format: double
          minimum: 0
        lines:
          type: number
          format: double
          minimum: 0
    ComplianceGapSummary:
      type: object
      required:
        - missingIds
        - partialIds
        - openObjectiveCount
      properties:
        missingIds:
          type: array
          description: Kanıt bulunmayan hedef kimlikleri.
          items:
            type: string
        partialIds:
          type: array
          description: Kapsaması kısmi olan hedef kimlikleri.
          items:
            type: string
        openObjectiveCount:
          type: integer
          minimum: 0
          description: missingIds ve partialIds toplamı.
    ComplianceSummaryLatest:
      type: object
      required:
        - id
        - createdAt
        - summary
        - coverage
        - gaps
      properties:
        id:
          type: string
        createdAt:
          type: string
          format: date-time
        project:
          type: string
          nullable: true
        level:
          type: string
          nullable: true
        generatedAt:
          type: string
          format: date-time
          nullable: true
        summary:
          type: object
          required:
            - total
            - covered
            - partial
            - missing
          properties:
            total:
              type: integer
              minimum: 0
            covered:
              type: integer
              minimum: 0
            partial:
              type: integer
              minimum: 0
            missing:
              type: integer
              minimum: 0
        coverage:
          $ref: '#/components/schemas/ComplianceCoverageSnapshot'
        gaps:
          $ref: '#/components/schemas/ComplianceGapSummary'
        independence:
          $ref: '#/components/schemas/ComplianceIndependenceSummary'
          nullable: true
    ComplianceSummaryResponse:
      type: object
      required:
        - computedAt
        - latest
      properties:
        computedAt:
          type: string
          format: date-time
        latest:
          $ref: '#/components/schemas/ComplianceSummaryLatest'
          nullable: true
    ComplianceIndependenceSummary:
      type: object
      required:
        - totals
        - objectives
      properties:
        totals:
          type: object
          required:
            - covered
            - partial
            - missing
          properties:
            covered:
              type: integer
              minimum: 0
            partial:
              type: integer
              minimum: 0
            missing:
              type: integer
              minimum: 0
        objectives:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceIndependenceObjective'
    ComplianceIndependenceObjective:
      type: object
      required:
        - objectiveId
        - status
        - independence
        - missingArtifacts
      properties:
        objectiveId:
          type: string
        status:
          type: string
          enum: [covered, partial, missing]
        independence:
          type: string
          enum: [none, recommended, required]
        missingArtifacts:
          type: array
          items:
            type: string
    RemediationPlanResponse:
      type: object
      required:
        - generatedAt
        - actions
      properties:
        generatedAt:
          type: string
          format: date-time
          description: Remediation planının üretildiği zaman damgası.
        actions:
          type: array
          items:
            $ref: '#/components/schemas/RemediationPlanAction'
          description: Uyumluluk boşluklarını kapatmak için önerilen eylemler.
    RemediationPlanAction:
      type: object
      required:
        - objectiveId
        - priority
        - issues
        - missingArtifacts
        - links
      properties:
        objectiveId:
          type: string
          description: Uyumluluk hedefinin benzersiz kimliği.
        priority:
          type: string
          enum: [critical, high, medium, low]
          description: Eylemin öncelik derecesi.
        issues:
          type: array
          items:
            $ref: '#/components/schemas/RemediationPlanIssue'
          description: Bu hedef için giderilmesi gereken eksiklikler.
        missingArtifacts:
          type: array
          items:
            type: string
            enum:
              - plan
              - standard
              - review
              - analysis
              - test
              - coverage_stmt
              - coverage_dec
              - coverage_mcdc
              - trace
              - cm_record
              - qa_record
              - problem_report
              - conformity
              - design
          description: Eksik olduğu belirlenen artefakt türlerinin benzersiz listesi.
        links:
          type: array
          description: İlgili kanıt veya çıktı dosyalarına referanslar.
          items:
            type: string
    RemediationPlanIssue:
      oneOf:
        - $ref: '#/components/schemas/RemediationGapIssue'
        - $ref: '#/components/schemas/RemediationIndependenceIssue'
    RemediationGapIssue:
      type: object
      required:
        - type
        - category
        - missingArtifacts
      properties:
        type:
          type: string
          enum: [gap]
        category:
          type: string
          enum:
            - plans
            - standards
            - reviews
            - analysis
            - tests
            - coverage
            - trace
            - configuration
            - quality
            - issues
            - conformity
          description: Eksikliğin ait olduğu kanıt kategorisi.
        missingArtifacts:
          type: array
          items:
            type: string
            enum:
              - plan
              - standard
              - review
              - analysis
              - test
              - coverage_stmt
              - coverage_dec
              - coverage_mcdc
              - trace
              - cm_record
              - qa_record
              - problem_report
              - conformity
              - design
    RemediationIndependenceIssue:
      type: object
      required:
        - type
        - independence
        - missingArtifacts
      properties:
        type:
          type: string
          enum: [independence]
        independence:
          type: string
          enum: [none, recommended, required]
          description: Bağımsızlık kapsamı ihtiyacı.
        missingArtifacts:
          type: array
          items:
            type: string
            enum:
              - plan
              - standard
              - review
              - analysis
              - test
              - coverage_stmt
              - coverage_dec
              - coverage_mcdc
              - trace
              - cm_record
              - qa_record
              - problem_report
              - conformity
    ComplianceRiskBreakdownEntry:
      type: object
      required: [factor, contribution, weight, details]
      properties:
        factor:
          type: string
          enum: [coverage, testing, analysis, audit]
        contribution:
          type: number
          format: double
        weight:
          type: number
          format: double
        details:
          type: string
    ComplianceRiskProfile:
      type: object
      required: [score, classification, breakdown, missingSignals]
      properties:
        score:
          type: number
          format: double
          minimum: 0
          maximum: 100
        classification:
          type: string
          enum: [low, moderate, high, critical]
        breakdown:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceRiskBreakdownEntry'
        missingSignals:
          type: array
          items:
            type: string
            enum: [coverage, testing, analysis, audit]
    StageRiskForecastResponse:
      type: object
      required:
        - generatedAt
        - stages
      properties:
        generatedAt:
          type: string
          format: date-time
          description: Risk simülasyonunun oluşturulduğu zaman damgası.
        stages:
          type: array
          description: Her SOI aşaması için tahmin edilen risk dağılımları.
          items:
            $ref: '#/components/schemas/StageRiskForecastEntry'
    StageRiskForecastEntry:
      type: object
      required:
        - stage
        - probability
        - classification
        - horizonDays
        - credibleInterval
        - posterior
        - baseline
        - percentiles
        - statistics
        - sparkline
      properties:
        stage:
          type: string
          enum: [SOI-1, SOI-2, SOI-3, SOI-4]
        probability:
          type: number
          format: double
          minimum: 0
          maximum: 100
          description: Belirlenen ufuk boyunca uyum regresyonu olasılığı (yüzde).
        classification:
          type: string
          enum: [nominal, guarded, elevated, critical]
        horizonDays:
          type: integer
          minimum: 1
          description: Simülasyonun öngördüğü ufuk uzunluğu (gün cinsinden).
        credibleInterval:
          $ref: '#/components/schemas/StageRiskCredibleInterval'
        posterior:
          $ref: '#/components/schemas/StageRiskPosteriorSummary'
        baseline:
          type: object
          required:
            - coverage
            - failureRate
            - backlogSeverity
          properties:
            coverage:
              type: number
              format: double
              description: Tarihsel kapsam puanı yüzdesi.
            failureRate:
              type: number
              format: double
              description: Test başarısızlık oranı yüzdesi.
            backlogSeverity:
              type: number
              format: double
              description: Kuyruktaki açık işlerin ağırlıklı şiddeti.
        percentiles:
          type: object
          required:
            - p50
            - p90
            - p95
            - p99
          properties:
            p50:
              type: number
              format: double
            p90:
              type: number
              format: double
            p95:
              type: number
              format: double
            p99:
              type: number
              format: double
        statistics:
          type: object
          required:
            - mean
            - stddev
            - min
            - max
          properties:
            mean:
              type: number
              format: double
            stddev:
              type: number
              format: double
            min:
              type: number
              format: double
            max:
              type: number
              format: double
        sparkline:
          type: array
          items:
            $ref: '#/components/schemas/StageRiskSparklinePoint'
        updatedAt:
          type: string
          format: date-time
          description: İlgili uyum trend verisinin son güncelleme zamanı.
    StageRiskCredibleInterval:
      type: object
      required: [lower, upper, confidence]
      properties:
        lower:
          type: number
          format: double
          minimum: 0
          maximum: 100
        upper:
          type: number
          format: double
          minimum: 0
          maximum: 100
        confidence:
          type: number
          format: double
          minimum: 0
          maximum: 100
    StageRiskPosteriorSummary:
      type: object
      required: [alpha, beta, sampleSize]
      properties:
        alpha:
          type: number
          format: double
        beta:
          type: number
          format: double
        sampleSize:
          type: integer
          minimum: 0
    StageRiskSparklinePoint:
      type: object
      required: [timestamp, regressionRatio]
      properties:
        timestamp:
          type: string
          format: date-time
        regressionRatio:
          type: number
          format: double
          minimum: 0
          maximum: 1
    ComplianceLedgerEvidenceLink:
      type: object
      required: [snapshotId, hash]
      properties:
        snapshotId:
          type: string
        hash:
          type: string
        path:
          type: string
          nullable: true
    ComplianceLedgerSignature:
      type: object
      required: [algorithm, publicKey, signature]
      properties:
        algorithm:
          type: string
          enum: [Ed25519]
        publicKey:
          type: string
        signature:
          type: string
        keyId:
          type: string
          nullable: true
    ComplianceLedgerEntry:
      type: object
      required:
        - index
        - snapshotId
        - manifestDigest
        - timestamp
        - merkleRoot
        - previousRoot
        - ledgerRoot
        - evidence
      properties:
        index:
          type: integer
          format: int32
        snapshotId:
          type: string
        manifestDigest:
          type: string
        timestamp:
          type: string
          format: date-time
        merkleRoot:
          type: string
        previousRoot:
          type: string
        ledgerRoot:
          type: string
        evidence:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceLedgerEvidenceLink'
        signature:
          $ref: '#/components/schemas/ComplianceLedgerSignature'
          nullable: true
    ComplianceQueueJob:
      type: object
      required: [id, kind, status, hash, createdAt, updatedAt]
      properties:
        id:
          type: string
        kind:
          type: string
          enum: [import, analyze, report, pack]
        status:
          type: string
          enum: [queued, running, completed, failed]
        hash:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    ComplianceQueueCounts:
      type: object
      required: [queued, running, completed, failed]
      additionalProperties: false
      properties:
        queued:
          type: integer
          format: int32
        running:
          type: integer
          format: int32
        completed:
          type: integer
          format: int32
        failed:
          type: integer
          format: int32
    ComplianceStreamEvent:
      type: object
      required: [type, tenantId, emittedAt]
      properties:
        type:
          type: string
          enum: [riskProfile, ledgerEntry, queueState]
        tenantId:
          type: string
        emittedAt:
          type: string
          format: date-time
        profile:
          $ref: '#/components/schemas/ComplianceRiskProfile'
        entry:
          $ref: '#/components/schemas/ComplianceLedgerEntry'
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceQueueJob'
        counts:
          $ref: '#/components/schemas/ComplianceQueueCounts'
    JobMutationResponse:
      type: object
      required:
        - status
        - id
        - kind
      properties:
        status:
          type: string
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        kind:
          type: string
          enum: [import, analyze, report, pack]
    ManifestFetchResponse:
      type: object
      required:
        - manifestId
        - jobId
        - manifest
      properties:
        manifestId:
          type: string
        jobId:
          type: string
          pattern: '^[a-f0-9]{16}$'
        manifest:
          type: object
          additionalProperties: true
        cmsSignature:
          $ref: '#/components/schemas/CmsSignatureMetadata'
          nullable: true
    CmsSignatureMetadata:
      type: object
      required:
        - path
        - sha256
        - der
        - digestAlgorithm
        - verified
        - digestVerified
      properties:
        path:
          type: string
          description: İmza dosyasının depolama üzerindeki göreli yolu.
        sha256:
          type: string
          description: PKCS#7 dosyasının SHA-256 karması.
        der:
          type: string
          description: Başlıkları kaldırılmış, Base64 kodlu DER CMS yükü.
        digestAlgorithm:
          type: string
        verified:
          type: boolean
        digestVerified:
          type: boolean
        signerSerialNumber:
          type: string
          nullable: true
        signerIssuer:
          type: string
          nullable: true
        signerSubject:
          type: string
          nullable: true
        signatureAlgorithm:
          type: string
          nullable: true
    PostQuantumSignatureMetadata:
      type: object
      required:
        - algorithm
        - publicKey
        - signature
      properties:
        algorithm:
          type: string
          description: Üretilen SPHINCS+ imzasının algoritma tanımlayıcısı.
        publicKey:
          type: string
          description: Base64 kodlu SPHINCS+ kamu anahtarı.
        signature:
          type: string
          description: Base64URL kodlu SPHINCS+ imzası.
    PackPostQuantumOptions:
      type: object
      properties:
        algorithm:
          type: string
          description: SPHINCS+ algoritma tanımlayıcısı (örn. `SPHINCS+-SHA2-128s`).
        privateKey:
          type: string
          description: Base64 kodlu SPHINCS+ özel anahtarı.
        privateKeyPath:
          type: string
          description: Sunucu tarafında erişilebilen SPHINCS+ özel anahtar yolu.
        publicKey:
          type: string
          description: Base64 kodlu SPHINCS+ kamu anahtarı.
        publicKeyPath:
          type: string
          description: Sunucu tarafında erişilebilen SPHINCS+ kamu anahtarı yolu.
      description: SPHINCS+ hibrit imzalama materyali. En az bir alan belirtilmelidir.
    ManifestMerkleSummary:
      type: object
      required:
        - algorithm
        - root
        - manifestDigest
        - snapshotId
      properties:
        algorithm:
          type: string
          enum: ['ledger-merkle-v1']
        root:
          type: string
          description: Manifest dosya Merkle kökü (SHA-256 hex).
        manifestDigest:
          type: string
          description: Manifest imza karması (SHA-256 hex).
        snapshotId:
          type: string
    ManifestFileProof:
      type: object
      required:
        - algorithm
        - merkleRoot
        - proof
      properties:
        algorithm:
          type: string
          enum: ['ledger-merkle-v1']
        merkleRoot:
          type: string
          description: İlgili Merkle kökü.
        proof:
          type: string
          description: "`serializeLedgerProof` çıktısı."
    ManifestProofListResponse:
      type: object
      required:
        - manifestId
        - jobId
        - files
      properties:
        manifestId:
          type: string
        jobId:
          type: string
          pattern: '^[a-f0-9]{16}$'
        merkle:
          $ref: '#/components/schemas/ManifestMerkleSummary'
          nullable: true
        files:
          type: array
          items:
            type: object
            required:
              - path
              - sha256
              - verified
            properties:
              path:
                type: string
              sha256:
                type: string
              proof:
                $ref: '#/components/schemas/ManifestFileProof'
                nullable: true
              verified:
                type: boolean
    ManifestProofResponse:
      type: object
      required:
        - manifestId
        - jobId
        - path
        - sha256
        - proof
        - verified
      properties:
        manifestId:
          type: string
        jobId:
          type: string
          pattern: '^[a-f0-9]{16}$'
        path:
          type: string
        sha256:
          type: string
        merkle:
          $ref: '#/components/schemas/ManifestMerkleSummary'
          nullable: true
        proof:
          $ref: '#/components/schemas/ManifestFileProof'
        verified:
          type: boolean
    AdminRole:
      type: object
      required:
        - id
        - name
        - createdAt
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
    AdminRoleResponse:
      type: object
      required:
        - role
      properties:
        role:
          $ref: '#/components/schemas/AdminRole'
    AdminRoleListResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminRole'
    AdminUser:
      type: object
      required:
        - id
        - tenantId
        - email
        - createdAt
        - updatedAt
        - roles
      properties:
        id:
          type: string
        tenantId:
          type: string
        email:
          type: string
        displayName:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        roles:
          type: array
          items:
            $ref: '#/components/schemas/AdminRole'
    AdminUserResponse:
      type: object
      required:
        - user
      properties:
        user:
          $ref: '#/components/schemas/AdminUser'
    AdminUserListResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminUser'
    AdminApiKey:
      type: object
      required:
        - id
        - tenantId
        - fingerprint
        - createdAt
        - roles
        - permissions
      properties:
        id:
          type: string
        tenantId:
          type: string
        label:
          type: string
          nullable: true
        fingerprint:
          type: string
        createdAt:
          type: string
          format: date-time
        lastUsedAt:
          type: string
          format: date-time
          nullable: true
        roles:
          type: array
          items:
            type: string
            enum: [admin, maintainer, reader]
        permissions:
          type: array
          items:
            type: string
        preview:
          type: string
          nullable: true
        expiresAt:
          type: string
          format: date-time
          nullable: true
    AdminApiKeyResponse:
      type: object
      required:
        - apiKey
      properties:
        apiKey:
          $ref: '#/components/schemas/AdminApiKey'
    AdminApiKeySecretResponse:
      allOf:
        - $ref: '#/components/schemas/AdminApiKeyResponse'
        - type: object
          required:
            - secret
          properties:
            secret:
              type: string
              description: Oluşturulan veya döndürülen API anahtarının gizli değeri.
    AdminApiKeyListResponse:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminApiKey'
    AdminRoleRequest:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
          nullable: true
      required:
        - name
    AdminUserCreateRequest:
      type: object
      required:
        - email
        - secret
      properties:
        id:
          type: string
        email:
          type: string
        secret:
          type: string
        displayName:
          type: string
          nullable: true
        roleIds:
          type: array
          items:
            type: string
    AdminUserUpdateRequest:
      type: object
      properties:
        displayName:
          type: string
          nullable: true
        secret:
          type: string
        roleIds:
          type: array
          items:
            type: string
    AdminApiKeyCreateRequest:
      type: object
      properties:
        id:
          type: string
        label:
          type: string
          nullable: true
        secret:
          type: string
        roles:
          type: array
          items:
            type: string
            enum: [admin, maintainer, reader]
        permissions:
          type: array
          items:
            type: string
        expiresAt:
          type: string
          format: date-time
          nullable: true
    AdminApiKeyUpdateRequest:
      type: object
      required:
        - secret
      properties:
        label:
          type: string
          nullable: true
        secret:
          type: string
        roles:
          type: array
          items:
            type: string
            enum: [admin, maintainer, reader]
        permissions:
          type: array
          items:
            type: string
        expiresAt:
          type: string
          format: date-time
          nullable: true
    WorkspaceRequirement:
      type: object
      required: [id, title, status, tags]
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
          nullable: true
        status:
          type: string
          enum: [draft, approved, implemented, verified]
        tags:
          type: array
          items:
            type: string
    WorkspaceRevision:
      type: object
      required: [id, number, hash, authorId, createdAt, content]
      properties:
        id:
          type: string
        number:
          type: integer
        hash:
          type: string
        authorId:
          type: string
        createdAt:
          type: string
          format: date-time
        content:
          type: array
          description: Belge türüne bağlı içerik. requirements belgeleri WorkspaceRequirement kayıtları içerir.
          items:
            oneOf:
              - $ref: '#/components/schemas/WorkspaceRequirement'
              - type: object
    WorkspaceDocument:
      type: object
      required: [id, tenantId, workspaceId, kind, title, createdAt, updatedAt, revision]
      properties:
        id:
          type: string
        tenantId:
          type: string
        workspaceId:
          type: string
        kind:
          type: string
          enum: [requirements, traceLinks, evidence]
        title:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        revision:
          $ref: '#/components/schemas/WorkspaceRevision'
    WorkspaceComment:
      type: object
      required: [id, documentId, revisionId, tenantId, workspaceId, authorId, body, createdAt]
      properties:
        id:
          type: string
        documentId:
          type: string
        revisionId:
          type: string
        tenantId:
          type: string
        workspaceId:
          type: string
        authorId:
          type: string
        body:
          type: string
        createdAt:
          type: string
          format: date-time
    WorkspaceSignoff:
      type: object
      required:
        - id
        - documentId
        - revisionId
        - tenantId
        - workspaceId
        - revisionHash
        - status
        - requestedBy
        - requestedFor
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
        documentId:
          type: string
        revisionId:
          type: string
        tenantId:
          type: string
        workspaceId:
          type: string
        revisionHash:
          type: string
        status:
          type: string
          enum: [pending, approved]
        requestedBy:
          type: string
        requestedFor:
          type: string
        signerId:
          type: string
          nullable: true
        signerPublicKey:
          type: string
          nullable: true
        signature:
          type: string
          nullable: true
        signedAt:
          type: string
          format: date-time
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    WorkspaceDocumentThreadResponse:
      type: object
      required:
        - document
        - comments
        - signoffs
        - nextCursor
      properties:
        document:
          $ref: '#/components/schemas/WorkspaceDocument'
        comments:
          type: array
          description: Belgenin en eski tarihten yeni tarihe sıralanmış yorumları.
          items:
            $ref: '#/components/schemas/WorkspaceComment'
        signoffs:
          type: array
          description: Revizyonlara ait imza isteği geçmişi (ilk isteğe göre sıralı).
          items:
            $ref: '#/components/schemas/WorkspaceSignoff'
        nextCursor:
          type: string
          nullable: true
          description: Sonraki yorum sayfası için imleç. Daha fazla kayıt yoksa null döner.
    WorkspaceDocumentUpdateRequest:
      type: object
      required: [kind, title, content]
      properties:
        kind:
          type: string
          enum: [requirements, traceLinks, evidence]
        title:
          type: string
        expectedHash:
          type: string
          nullable: true
        content:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/WorkspaceRequirement'
              - type: object
    WorkspaceCommentRequest:
      type: object
      required: [body]
      properties:
        body:
          type: string
        revisionId:
          type: string
        revisionHash:
          type: string
    WorkspaceSignoffRequest:
      type: object
      required: [documentId, revisionHash, requestedFor]
      properties:
        documentId:
          type: string
        revisionHash:
          type: string
        requestedFor:
          type: string
    WorkspaceSignoffApprovalRequest:
      type: object
      required: [action, expectedRevisionHash, publicKey, signature, signedAt]
      properties:
        action:
          type: string
          enum: [approve]
        expectedRevisionHash:
          type: string
        publicKey:
          type: string
        signature:
          type: string
        signedAt:
          type: string
          format: date-time
paths:
  /health:
    get:
      operationId: getHealth
      summary: Sunucu sağlık durumu.
      security: []
      responses:
        '200':
          description: Sunucu çalışıyor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '400':
          description: Geçersiz istek.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/audit-logs:
    get:
      operationId: listAuditLogs
      summary: Denetim kayıtlarını listeler.
      description: Kiracının ve (yönetici yetkisi varsa) diğer kiracıların denetim olaylarını döndürür.
      security:
        - BearerAuth: []
      parameters:
        - name: tenantId
          in: query
          required: false
          description: Başka bir kiracının kayıtlarını görüntülemek için yönetici yetkisi gerekir.
          schema:
            type: string
        - name: actor
          in: query
          required: false
          description: Belirli bir kullanıcı veya sistem aktörü tarafından oluşturulan kayıtları filtreler.
          schema:
            type: string
        - name: action
          in: query
          required: false
          description: Eylem adına göre filtre uygular.
          schema:
            type: string
        - name: target
          in: query
          required: false
          description: Belirli bir hedef kaynağa ait kayıtları döndürür.
          schema:
            type: string
        - name: since
          in: query
          required: false
          description: Belirtilen ISO 8601 zamanından itibaren kayıtları döndürür.
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          required: false
          description: Belirtilen ISO 8601 zamanına kadar olan kayıtları içerir.
          schema:
            type: string
            format: date-time
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
          description: Zaman sıralamasını belirler (varsayılan desc).
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: Döndürülecek maksimum kayıt sayısı.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Sayfalama için ofset değeri.
      responses:
        '200':
          description: Denetim kayıtları başarıyla döndürüldü.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yetki yetersiz.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/ingest:
    post:
      operationId: runIngestPipeline
      summary: Import → analyze → report → pack zincirini tek istekte çalıştırır.
      description: |
        Dosya yüklerini ve isteğe bağlı bağlayıcı yapılandırmasını kullanarak import,
        analyze, report ve pack işlemlerini sıralı biçimde yürütür. Aynı dosya ve
        seçenek kombinasyonları tekrar gönderildiğinde önceki çalışma yeniden
        kullanılır. İşlem hattının yürütülmesi için lisansın `import`, `analyze`,
        `report` ve `pack` özelliklerini etkinleştirmiş olması gerekir.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license:
                  type: string
                  format: binary
                  description: Lisans anahtarı dosyası (başlıkla gönderilirse opsiyoneldir).
                jira:
                  type: string
                  format: binary
                  description: Jira gereksinim CSV dışa aktarımı.
                jiraDefects:
                  type: array
                  description: Jira hata CSV dışa aktarımları; alan çoklu dosya kabul eder.
                  items:
                    type: string
                    format: binary
                reqif:
                  type: string
                  format: binary
                  description: ReqIF gereksinim paketi.
                junit:
                  type: string
                  format: binary
                  description: JUnit XML test sonuçları.
                lcov:
                  type: string
                  format: binary
                  description: LCOV kapsam raporu.
                cobertura:
                  type: string
                  format: binary
                  description: Cobertura kapsam raporu.
                git:
                  type: string
                  format: binary
                  description: Kaynak kodu veya yapı artefaktları arşivi.
                objectives:
                  type: string
                  format: binary
                  description: Uyumluluk hedefleri JSON dosyası.
                traceLinksCsv:
                  type: string
                  format: binary
                  description: CSV formatında izlenebilirlik matrisi.
                traceLinksJson:
                  type: string
                  format: binary
                  description: JSON formatında izlenebilirlik matrisi.
                designCsv:
                  type: string
                  format: binary
                  description: Tasarım izlenebilirlik CSV dışa aktarımı.
                polyspace:
                  type: string
                  format: binary
                  description: Polyspace analiz çıktısı (örn. ZIP arşivi).
                ldra:
                  type: string
                  format: binary
                  description: LDRA kapsam veya test arşivi.
                vectorcast:
                  type: string
                  format: binary
                  description: VectorCAST kapsam/test arşivi.
                qaLogs:
                  type: array
                  description: QA denetim günlükleri; birden fazla dosya desteklenir.
                  items:
                    type: string
                    format: binary
                connector:
                  $ref: '#/components/schemas/ImportConnectorPayload'
                  description: >-
                    Polarion, Jenkins, DOORS Next, Jama veya Jira Cloud bağlayıcılarından kanıt
                    toplamak için kullanılan yapılandırma. Değer multipart gövde içinde JSON
                    olarak gönderilmelidir.
                independentSources:
                  type: array
                  description: Bağımsız kaynak kanıt kimlikleri listesi.
                  items:
                    type: string
                independentArtifacts:
                  type: array
                  description: Bağımsız artefakt kanıt kimlikleri listesi.
                  items:
                    type: string
                projectName:
                  type: string
                projectVersion:
                  type: string
                level:
                  type: string
                  description: Sertifikasyon seviyesi (A-E).
                soiStage:
                  type: string
                  enum: [SOI-1, SOI-2, SOI-3, SOI-4]
                  description: Rapor ve paket çıktılarının ilişkilendirileceği SOI aşaması.
                manifestId:
                  type: string
                  description: Paket çıktılarının ilişkilendirileceği manifest kimliği.
                packageName:
                  type: string
                  description: Üretilecek paket arşivinin adı.
                planConfig:
                  type: string
                  format: binary
                  description: Test planı yapılandırma dosyası.
                planOverrides:
                  type: string
                  description: JSON olarak kodlanmış rapor planı ayarları.
                postQuantum:
                  type: string
                  description: >-
                    JSON kodlu SPHINCS+ imzalama seçenekleri veya `false` değeri hibrit imzayı
                    devre dışı bırakmak için kullanılabilir.
              additionalProperties: false
            encoding:
              connector:
                contentType: application/json
              planOverrides:
                contentType: application/json
              postQuantum:
                contentType: application/json
      responses:
        '201':
          description: İşlem hattı başarıyla tamamlandı ve yeni çıktılar üretildi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestPipelineResponse'
        '200':
          description: Aynı girdiler için daha önce üretilmiş sonuçlar döndürüldü.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestPipelineResponse'
        '400':
          description: Geçersiz istek veya eksik giriş verisi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Lisans gerekli özellikleri içermiyor veya kiracı eşleşmiyor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: İstek oranı sınırı aşıldı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '501':
          description: İstenen uzaktan bağlayıcı henüz desteklenmiyor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/import:
    post:
      operationId: createImportJob
      summary: Kanıt dosyalarını çalışma alanına aktarır.
      description: |
        Aynı dosya ve seçenek kombinasyonu tekrar gönderildiğinde aynı kimlikte sonuç üretir.
        İsteğe bağlı olarak, dosya yüklemeden bağımsız biçimde uzaktan bağlayıcı
        yapılandırması (`connector`) sağlayarak Polarion, Jenkins, DOORS Next, Jama
        veya Jira Cloud sistemlerinden kanıt toplanması tetiklenebilir.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license:
                  type: string
                  format: binary
                  description: Lisans anahtarı dosyası. Başlıkla gönderilirse bu alan boş bırakılabilir.
                jira:
                  type: string
                  format: binary
                  description: Jira CSV dışa aktarımı.
                reqif:
                  type: string
                  format: binary
                  description: ReqIF gereksinim paketi.
                junit:
                  type: string
                  format: binary
                  description: JUnit XML test sonuçları.
                lcov:
                  type: string
                  format: binary
                  description: LCOV kapsam raporu.
                cobertura:
                  type: string
                  format: binary
                  description: Cobertura kapsam raporu.
                git:
                  type: string
                  format: binary
                  description: Git meta verisi (opsiyonel).
                objectives:
                  type: string
                  format: binary
                  description: Uyumluluk hedefleri JSON dosyası.
                designCsv:
                  type: string
                  format: binary
                  description: Tasarım gereksinim izleme CSV dışa aktarımı.
                jiraDefects:
                  type: array
                  description: Jira hata CSV dışa aktarımları; birden fazla dosya desteklenir.
                  items:
                    type: string
                    format: binary
                polyspace:
                  type: string
                  format: binary
                  description: Polyspace analiz çıktısı (örn. ZIP arşivi).
                ldra:
                  type: string
                  format: binary
                  description: LDRA rapor paketi veya arşivi.
                vectorcast:
                  type: string
                  format: binary
                  description: VectorCAST sonuç arşivi.
                qaLogs:
                  type: array
                  description: Kalite güvence günlükleri; alan birden fazla dosyayı kabul eder.
                  items:
                    type: string
                    format: binary
                connector:
                  $ref: '#/components/schemas/ImportConnectorPayload'
                  description: >-
                    Polarion, Jenkins, DOORS Next, Jama veya Jira Cloud üzerinde barındırılan
                    kanıtları senkronize etmek için kullanılacak bağlayıcı yapılandırması.
                    Alan multipart form verisinde JSON olarak gönderilmelidir.
                  example:
                    type: polarion
                    options:
                      baseUrl: https://polarion.example.com/
                      projectId: avionics
                      username: traceability-bot
                      token: s3cr3t-token
                independentSources:
                  type: array
                  description: Bağımsız kaynak kanıtları için kimlikler listesi.
                  items:
                    type: string
                independentArtifacts:
                  type: array
                  description: Bağımsız artefakt kanıtları için kimlikler listesi.
                  items:
                    type: string
                projectName:
                  type: string
                projectVersion:
                  type: string
                level:
                  type: string
                  description: Sertifikasyon seviyesi (A-E).
            encoding:
              connector:
                contentType: application/json
      responses:
        '200':
          description: Import işlemi tamamlandı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reviews:
    post:
      operationId: createReview
      summary: İnceleme kaydı oluşturur.
      description: >-
        İncelemeler `draft → pending → approved/rejected` yaşam döngüsünü izler. İnceleme oluşturulduktan sonra
        atanan onaycılar ve gerekli kanıtlar bu uç noktadan yönetilebilir.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - target
              properties:
                target:
                  $ref: '#/components/schemas/ReviewTarget'
                approvers:
                  type: array
                  items:
                    type: string
                  description: İncelemeyi onaylaması gereken kullanıcı kimlikleri.
                requiredArtifacts:
                  type: array
                  items:
                    type: object
                    required:
                      - label
                    properties:
                      id:
                        type: string
                        description: Önceden belirlenmiş kanıt kimliği (opsiyonel).
                      label:
                        type: string
                      description:
                        type: string
                        nullable: true
                notes:
                  type: string
                  nullable: true
      responses:
        '201':
          description: İnceleme oluşturuldu.
          content:
            application/json:
              schema:
                type: object
                required:
                  - review
                properties:
                  review:
                    $ref: '#/components/schemas/ReviewResource'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reviews/{id}:
    patch:
      operationId: updateReview
      summary: İnceleme durumunu veya atamalarını günceller.
      description: >-
        `configure` eylemi taslak/ret durumundaki incelemeleri değiştirir, `submit` incelemeyi onaya gönderir,
        `approve` ve `reject` ise atanan onaycılar tarafından yürütülür.
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: İnceleme kimliği.
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
                - expectedHash
              properties:
                action:
                  type: string
                  enum: [configure, submit, approve, reject]
                expectedHash:
                  type: string
                  description: Güncel inceleme hash değeri (iyimser kilit).
                target:
                  $ref: '#/components/schemas/ReviewTarget'
                approvers:
                  type: array
                  items:
                    type: string
                requiredArtifacts:
                  type: array
                  items:
                    type: object
                    required:
                      - label
                    properties:
                      id:
                        type: string
                      label:
                        type: string
                      description:
                        type: string
                        nullable: true
                notes:
                  type: string
                  nullable: true
                  description: İncelemenin genel notu (configure için).
                note:
                  type: string
                  nullable: true
                  description: Onay notu (approve eylemi için).
                reason:
                  type: string
                  description: Ret gerekçesi (reject eylemi için).
      responses:
        '200':
          description: İnceleme güncellendi.
          content:
            application/json:
              schema:
                type: object
                required:
                  - review
                properties:
                  review:
                    $ref: '#/components/schemas/ReviewResource'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İnceleme işlemi için yetki yetersiz.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İnceleme bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Hash kilidi uyuşmadı veya geçersiz durum geçişi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/workspaces/{workspaceId}/documents/{documentId}:
    get:
      operationId: getWorkspaceDocumentThread
      summary: Çalışma alanı belgesinin son revizyonunu, yorumlarını ve imza geçmişini getirir.
      tags:
        - Workspaces
      security:
        - BearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/LicenseHeader'
        - name: cursor
          in: query
          required: false
          schema:
            type: string
          description: Yorumları sayfalarken kullanılacak imleç. Bir önceki yanıttaki `nextCursor` değerini iletin.
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
          description: Aynı yanıtta döndürülecek azami yorum sayısı. Varsayılan 20'dir.
      responses:
        '200':
          description: Belge ve etkinlikleri başarıyla getirildi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDocumentThreadResponse'
        '400':
          description: Sorgu parametreleri geçersiz.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Kullanıcının yeterli rolü yok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Belge bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: updateWorkspaceDocument
      summary: Çalışma alanı belgesini oluşturur veya günceller.
      tags:
        - Workspaces
      security:
        - BearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceDocumentUpdateRequest'
      responses:
        '200':
          description: Belge güncellendi.
          content:
            application/json:
              schema:
                type: object
                properties:
                  document:
                    $ref: '#/components/schemas/WorkspaceDocument'
        '400':
          description: İstek gövdesi geçersiz.
        '403':
          description: Kullanıcının yeterli rolü yok.
        '404':
          description: Belge bulunamadı.
        '409':
          description: Belge güncellemesi çakıştı.
  /v1/workspaces/{workspaceId}/documents/{documentId}/comments:
    post:
      operationId: commentWorkspaceDocument
      summary: Bir belge revizyonuna yorum ekler.
      tags:
        - Workspaces
      security:
        - BearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - name: documentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCommentRequest'
      responses:
        '201':
          description: Yorum oluşturuldu.
          content:
            application/json:
              schema:
                type: object
                properties:
                  comment:
                    $ref: '#/components/schemas/WorkspaceComment'
        '400':
          description: İstek gövdesi geçersiz.
        '403':
          description: Kullanıcının yeterli rolü yok.
        '404':
          description: Belge veya revizyon bulunamadı.
  /v1/workspaces/{workspaceId}/signoffs:
    post:
      operationId: requestWorkspaceSignoff
      summary: Belge için imza isteği açar.
      tags:
        - Workspaces
      security:
        - BearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceSignoffRequest'
      responses:
        '201':
          description: İmza isteği oluşturuldu.
          content:
            application/json:
              schema:
                type: object
                properties:
                  signoff:
                    $ref: '#/components/schemas/WorkspaceSignoff'
        '400':
          description: İstek gövdesi geçersiz.
        '403':
          description: Kullanıcının yeterli rolü yok.
        '404':
          description: Belge veya revizyon bulunamadı.
  /v1/workspaces/{workspaceId}/signoffs/{signoffId}:
    patch:
      operationId: approveWorkspaceSignoff
      summary: İmza isteğini onaylar.
      tags:
        - Workspaces
      security:
        - BearerAuth: []
      parameters:
        - name: workspaceId
          in: path
          required: true
          schema:
            type: string
        - name: signoffId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceSignoffApprovalRequest'
      responses:
        '200':
          description: İmza isteği güncellendi.
          content:
            application/json:
              schema:
                type: object
                properties:
                  signoff:
                    $ref: '#/components/schemas/WorkspaceSignoff'
        '400':
          description: İmza doğrulanamadı.
        '403':
          description: Kullanıcının yeterli rolü yok.
        '404':
          description: İmza isteği bulunamadı.
        '409':
          description: İmza isteği güncel değil.
  /v1/analyze:
    post:
      operationId: createAnalyzeJob
      summary: Çalışma alanından uyum analizi üretir.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - importId
              properties:
                importId:
                  type: string
                  description: Import işlemi kimliği.
                reviewId:
                  type: string
                  description: Onaylanmış inceleme kimliği; yönetici yetkisi olmayan istemciler için zorunludur.
                level:
                  type: string
                  description: Sertifikasyon seviyesi (A-E).
                projectName:
                  type: string
                projectVersion:
                  type: string
      responses:
        '200':
          description: Analiz tamamlandı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İnceleme gereksinimi karşılanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: İnceleme henüz onaylanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Kaynak bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/report:
    post:
      operationId: createReportJob
      summary: Analiz çıktılarından rapor üretir.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analysisId
              properties:
                analysisId:
                  type: string
                manifestId:
                  type: string
                  description: Rapor başlıklarında kullanılacak manifest kimliği.
                reviewId:
                  type: string
                  description: Onaylanmış inceleme kimliği; yönetici yetkisi olmayan istemciler için zorunludur.
                planOverrides:
                  type: object
                  additionalProperties: true
                  description: Rapor üretimi sırasında uygulanacak plan ayarları.
          multipart/form-data:
            schema:
              type: object
              required:
                - analysisId
              properties:
                license:
                  type: string
                  format: binary
                  description: Lisans anahtarı dosyası (isteğe bağlı; başlıkla gönderilebilir).
                analysisId:
                  type: string
                manifestId:
                  type: string
                reviewId:
                  type: string
                planConfig:
                  type: string
                  format: binary
                  description: Test planı yapılandırması dosyası.
                planOverrides:
                  type: string
                  description: JSON olarak kodlanmış plan ayarları.
      responses:
        '200':
          description: Rapor üretildi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İnceleme gereksinimi karşılanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: İnceleme henüz onaylanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Analiz bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/analyses/{id}/gsn.dot:
    get:
      operationId: getAnalysisGsnDot
      summary: GSN’i Graphviz DOT olarak döndürür.
      tags:
        - Analyses
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: Analiz kimliği.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Analizin GSN grafiği.
          headers:
            Content-Disposition:
              schema:
                type: string
              example: attachment; filename="analysis-gsn.dot"
          content:
            text/vnd.graphviz; charset=utf-8:
              schema:
                type: string
                description: Analizin GSN yapısının Graphviz DOT temsili.
              example: |-
                digraph GSN {
                  Goal1 [label="Ana hedef"];
                }
            text/plain:
              schema:
                type: string
                description: Analizin GSN yapısının Graphviz DOT temsili.
              example: |-
                digraph GSN {
                  Goal1 [label="Ana hedef"];
                }
        '400':
          description: Geçersiz analiz kimliği.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yetki yetersiz.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Analiz bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '406':
          description: Accept başlığı desteklenmeyen içerik türü talep etti.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '415':
          description: İstek medya türü desteklenmiyor.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Çok fazla istek gönderildi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Beklenmeyen sunucu hatası.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/pack:
    post:
      operationId: createPackJob
      summary: Rapor çıktılarını arşivler.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reportId
              properties:
                reportId:
                  type: string
                packageName:
                  type: string
                  description: Oluşturulacak zip dosyası adı. Yalnızca `.zip` uzantılı ve harf/rakam, nokta, alt çizgi veya tire içeren düz dosya adları kabul edilir.
                  pattern: '^[A-Za-z0-9][A-Za-z0-9._-]*\.zip$'
                reviewId:
                  type: string
                  description: Onaylanmış inceleme kimliği; yönetici yetkisi olmayan istemciler için zorunludur.
                postQuantum:
                  description: SPHINCS+ post-kuantum imzalama seçenekleri; belirtilirse manifest hibrit olarak imzalanır.
                  oneOf:
                    - $ref: '#/components/schemas/PackPostQuantumOptions'
                    - type: boolean
                      enum: [false]
      responses:
        '200':
          description: Paket başarıyla oluşturuldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İnceleme gereksinimi karşılanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: İnceleme henüz onaylanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Rapor bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/jobs:
    get:
      operationId: listJobs
      summary: Kiracıya ait işleri listeler.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: kind
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [import, analyze, report, pack]
          description: Döndürülecek iş türleri. Virgülle ayrılmış veya tekrarlanan parametreler desteklenir.
        - in: query
          name: status
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [queued, running, completed, failed]
          description: Döndürülecek iş durumları.
      responses:
        '200':
          description: İş listesi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResponse'
        '400':
          description: Geçersiz filtre parametresi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/compliance/remediation-plan:
    get:
      operationId: getRemediationPlan
      summary: Analiz sonuçlarından iyileştirme planı üretir.
      description: |
        Belirtilen analiz çıktılarındaki boşluk ve bağımsızlık özetlerini kullanarak
        önceliklendirilmiş iyileştirme eylemleri listesini döndürür. İstek, analiz
        kimliğinin ve isteğe bağlı SOI aşamasının sorgu parametresi olarak
        sağlanmasını gerektirir.
      tags:
        - Compliance
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: analysisId
          required: true
          description: İyileştirme planının üretileceği analiz işinin kimliği.
          schema:
            type: string
        - in: query
          name: soiStage
          required: false
          description: Aşamaya özgü analiz çıktıları kullanmak için SOI kimliği.
          schema:
            type: string
            enum: [SOI-1, SOI-2, SOI-3, SOI-4]
      responses:
        '200':
          description: İyileştirme planı başarıyla oluşturuldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemediationPlanResponse'
        '400':
          description: Geçersiz sorgu parametresi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İstemci gerekli role sahip değil.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İstenen analiz veya çıktı dizinleri bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Analiz çıktıları eksik veya tamamlanmamış.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: İstek oranı sınırı aşıldı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/compliance/summary:
    get:
      operationId: getComplianceSummary
      summary: Son uyum matrisinin özetini ve kapsam metriklerini döner.
      description: |
        En güncel uyum kaydının hedef sayıları, kapsam yüzdeleri ve açık hedef
        listelerini döndürür. Yanıtlar 60 saniyelik bir önbellekten servis
        edilir ve `Cache-Control: private, max-age=60` başlığı içerir.
      tags:
        - Compliance
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Uyum özeti başarıyla getirildi.
          headers:
            Cache-Control:
              schema:
                type: string
              description: Özet sonucunun önbellek süresi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceSummaryResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İstemci gerekli role sahip değil.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/risk/stage-forecast:
    get:
      operationId: getStageRiskForecast
      summary: SOI aşamalarına göre uyum riski tahminlerini döner.
      description: |
        Tarihsel uyum kayıtlarını, test geçmişini ve değişiklik kuyruğu verilerini
        kullanarak her SOI aşaması için Monte Carlo simülasyonları ve Bayesian
        tahminler üretir. Sonuçlar kısa süreli bir önbellekten sunulur.
      tags:
        - Risk
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Aşama bazlı risk tahminleri başarıyla oluşturuldu.
          headers:
            Cache-Control:
              schema:
                type: string
              description: Tahmin yanıtı için önbellek yönergesi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StageRiskForecastResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İstemci gerekli role sahip değil.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Yeterli uyum geçmişi bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: İstek oranı sınırı aşıldı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/stream/compliance:
    get:
      operationId: streamCompliance
      summary: Risk profilleri ve kuyruk durumları için SSE akışı.
      description: |-
        Tenant kimliğiyle ilişkilendirilmiş risk profili güncellemelerini, ledger
        zinciri girişlerini ve kuyruk durum değişimlerini gerçek zamanlı olarak
        yayınlar. Yanıt `text/event-stream` içerik türünde standart SSE
        mesajlarından oluşur. Her mesajın verisi JSON olarak kodlanır ve
        `ComplianceStreamEvent` şemasını takip eder.
      tags:
        - Compliance
      security:
        - BearerAuth: []
      responses:
        '200':
          description: SSE akışı başarıyla başlatıldı.
          content:
            text/event-stream:
              schema:
                type: string
                description: Her satır `event:` ve `data:` alanlarından oluşan SSE mesajıdır.
              examples:
                riskProfile:
                  summary: Risk profili olayı
                  value: |
                    event: riskProfile
                    data: {"type":"riskProfile","tenantId":"tenant-a","profile":{"score":37,"classification":"moderate"}}
                queueState:
                  summary: Kuyruk durumu olayı
                  value: |
                    event: queueState
                    data: {"type":"queueState","tenantId":"tenant-a","counts":{"queued":0,"running":1,"completed":0,"failed":0}}
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: İstemci gerekli role sahip değil.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/jobs/{id}:
    get:
      operationId: getJob
      summary: Belirli bir işin durumunu döner.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: İş durumu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetailsResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İş bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteJob
      summary: Tamamlanmış bir işin çıktısını kalıcı depolamadan siler.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: İş çıktıları temizlendi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMutationResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İş bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: İş henüz tamamlanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/jobs/{id}/cancel:
    post:
      operationId: cancelJob
      summary: Kuyrukta bekleyen bir işi iptal eder.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: İş iptal edildi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMutationResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İş bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: İş iptal edilemez durumda.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reports/{id}/{asset}:
    get:
      operationId: getReportAsset
      summary: Üretilen rapor dosyalarını döner.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
        - in: path
          name: asset
          required: true
          schema:
            type: string
          description: Rapor dizini altındaki dosya adı.
      responses:
        '200':
          description: İstenen rapor dosyası.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Rapor veya dosya bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/manifests/{manifestId}:
    get:
      operationId: getManifest
      summary: Paketlenmiş manifest içeriğini döner.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: manifestId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Manifest içeriği.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestFetchResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Manifest bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/manifests/{manifestId}/proofs:
    get:
      operationId: listManifestProofs
      summary: Manifest dosyalarına ait Merkle kanıtlarını listeler.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: manifestId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Manifest dosya kanıtları listesi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestProofListResponse'
        '400':
          description: Geçersiz istek parametresi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Kullanıcının yeterli rolü yok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Manifest bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Kanıt doğrulaması başarısız oldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/manifests/{manifestId}/proofs/{filePath}:
    get:
      operationId: getManifestProof
      summary: Tek bir manifest dosyasının Merkle kanıtını döner.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: manifestId
          required: true
          schema:
            type: string
        - in: path
          name: filePath
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Dosyanın Merkle kanıtı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestProofResponse'
        '400':
          description: Geçersiz istek parametresi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Kullanıcının yeterli rolü yok.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Manifest ya da dosya bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Kanıt doğrulaması başarısız oldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/packages/{id}:
    get:
      operationId: downloadPackage
      summary: Oluşturulmuş paket arşivini indirir.
      deprecated: true
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: Paket arşiv dosyası.
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Paket bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/packages/{id}/archive:
    get:
      operationId: downloadPackageArchive
      summary: Paket arşiv dosyasını doğrudan indirir.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: Paket arşiv dosyası.
          headers:
            Content-Disposition:
              description: İndirilen dosya adı.
              schema:
                type: string
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Paket bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/packages/{id}/manifest:
    get:
      operationId: downloadPackageManifest
      summary: Paket manifest dosyasını indirir.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: Manifest dosyası.
          headers:
            Content-Disposition:
              description: Manifest dosya adı.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Manifest bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/packages/{id}/manifest.cms:
    get:
      operationId: downloadPackageManifestCms
      summary: Paket manifestinin PKCS#7 imza dosyasını indirir.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: PKCS#7 imza dosyası.
          headers:
            Content-Disposition:
              description: İndirilen dosya adı.
              schema:
                type: string
          content:
            application/pkcs7-signature:
              schema:
                type: string
                format: binary
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Manifest imzası bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/roles:
    get:
      operationId: listAdminRoles
      summary: Yönetici rollerini listeler.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '200':
          description: Tanımlı roller.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRoleListResponse'
    post:
      operationId: createAdminRole
      summary: Yeni bir yönetici rolü oluşturur.
      security:
        - BearerAuth: []
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRoleRequest'
      responses:
        '201':
          description: Oluşturulan rol.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRoleResponse'
        '400':
          description: Geçersiz rol bilgisi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/roles/{roleId}:
    parameters:
      - in: path
        name: roleId
        required: true
        schema:
          type: string
    put:
      operationId: updateAdminRole
      summary: Mevcut rolü günceller.
      security:
        - BearerAuth: []
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminRoleRequest'
      responses:
        '200':
          description: Güncellenen rol.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminRoleResponse'
        '400':
          description: Geçersiz rol verisi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteAdminRole
      summary: Rolü kalıcı olarak siler.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '204':
          description: Rol silindi.
        '404':
          description: Rol bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/users:
    get:
      operationId: listAdminUsers
      summary: Kiracıdaki kullanıcıları listeler.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '200':
          description: Kullanıcı listesi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserListResponse'
    post:
      operationId: createAdminUser
      summary: Yeni bir kullanıcı oluşturur.
      security:
        - BearerAuth: []
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserCreateRequest'
      responses:
        '201':
          description: Oluşturulan kullanıcı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserResponse'
        '400':
          description: Geçersiz kullanıcı bilgisi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/users/{userId}:
    parameters:
      - in: path
        name: userId
        required: true
        schema:
          type: string
    get:
      operationId: getAdminUser
      summary: Kullanıcı detaylarını döndürür.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '200':
          description: Kullanıcı bilgileri.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserResponse'
        '404':
          description: Kullanıcı bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: updateAdminUser
      summary: Kullanıcı profilini veya yetkilerini günceller.
      security:
        - BearerAuth: []
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminUserUpdateRequest'
      responses:
        '200':
          description: Güncellenen kullanıcı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminUserResponse'
        '400':
          description: Geçersiz kullanıcı güncellemesi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteAdminUser
      summary: Kullanıcıyı siler.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '204':
          description: Kullanıcı silindi.
        '404':
          description: Kullanıcı bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/api-keys:
    get:
      operationId: listAdminApiKeys
      summary: API anahtarlarını listeler.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '200':
          description: API anahtarı listesi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApiKeyListResponse'
    post:
      operationId: createAdminApiKey
      summary: Yeni bir API anahtarı oluşturur.
      security:
        - BearerAuth: []
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminApiKeyCreateRequest'
      responses:
        '201':
          description: Oluşturulan anahtar ve gizli değer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApiKeySecretResponse'
        '400':
          description: Geçersiz API anahtarı isteği.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/api-keys/{keyId}:
    parameters:
      - in: path
        name: keyId
        required: true
        schema:
          type: string
    get:
      operationId: getAdminApiKey
      summary: Tekil API anahtarı ayrıntılarını döndürür.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '200':
          description: API anahtarı bilgileri.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApiKeyResponse'
        '404':
          description: Anahtar bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      operationId: updateAdminApiKey
      summary: API anahtarını döndürür ve yeni gizli değer üretir.
      security:
        - BearerAuth: []
      tags:
        - Admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminApiKeyUpdateRequest'
      responses:
        '200':
          description: Güncellenen anahtar ve yeni gizli değer.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminApiKeySecretResponse'
        '400':
          description: Geçersiz güncelleme isteği.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteAdminApiKey
      summary: API anahtarını kalıcı olarak siler.
      security:
        - BearerAuth: []
      tags:
        - Admin
      responses:
        '204':
          description: API anahtarı silindi.
        '404':
          description: Anahtar bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/storage/health:
    get:
      operationId: getStorageHealth
      summary: Depolama sağlayıcısı ve veritabanı sağlık durumunu döndürür.
      description: |-
        Yalnızca yönetici kapsamına sahip belirteçlerle çağrılabilir. Aktif depolama
        sağlayıcısının adını ve veritabanına yapılan test sorgusunun gecikmesini
        rapor eder. Başarısız olursa hata ayrıntıları döner.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Depolama sağlık durumu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageHealthResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yönetici kapsamı gerekli.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Sağlık denetimi sırasında depolama veya veritabanı erişimi başarısız oldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/cleanup:
    post:
      operationId: runRetentionCleanup
      summary: Saklama politikalarına göre eski iş çıktılarının temizliğini tetikler.
      description: |-
        Yalnızca yönetici kapsamına sahip belirteçlerle çağrılabilir. `SOIPACK_AUTH_ADMIN_SCOPES`
        listesinde tanımlanan kapsamların en az birine sahip erişim belirteci gerektirir.
        Zamanlanmış temizlik `SOIPACK_RETENTION_SWEEP_INTERVAL_MS` ayarlandığında
        arka planda otomatik olarak yürütülür; bu uç nokta aynı işi manuel olarak
        tetiklemek için kullanılabilir.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Temizlik işlemi özeti.
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - summary
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                  summary:
                    type: array
                    description: Her saklama hedefi için temizlenen/korunan kayıt sayıları.
                    items:
                      type: object
                      required:
                        - target
                        - removed
                        - retained
                        - skipped
                        - configured
                      properties:
                        target:
                          type: string
                          description: Saklama politikası hedefi.
                          enum:
                            - uploads
                            - analyses
                            - reports
                            - packages
                        removed:
                          type: integer
                          minimum: 0
                        retained:
                          type: integer
                          minimum: 0
                        skipped:
                          type: integer
                          minimum: 0
                        configured:
                          type: boolean
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yönetici kapsamı eksik.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /metrics:
    get:
      operationId: getMetrics
      summary: Prometheus formatında gözlemlenebilirlik metriklerini döner.
      description: |-
        Yalnızca yönetici kapsamına sahip belirteçlerle çağrılabilir. `SOIPACK_AUTH_ADMIN_SCOPES`
        listesinde tanımlanan kapsamların en az birine sahip erişim belirteci gerektirir.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Prometheus metrikleri.
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yönetici kapsamı eksik.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
