openapi: 3.1.0
info:
  title: SOIPack REST API
  version: 0.1.0
  description: |
    SOIPack çalışma akışlarını HTTPS üzerinden tetikleyen REST arayüzü. Sunucu yalnızca TLS sertifikası ve anahtarı sağlandığında başlatılır; düz HTTP dinleyicileri desteklenmez. Uygulama IP ve kiracı bazında oran sınırlaması uygular ve JSON gövdeleri için maksimum boyut denetimi yapar.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.soipack.dev
security:
  - BearerAuth: []
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: OIDC sağlayıcısı tarafından imzalanmış, tenant kimliği içeren erişim belirteci.
  parameters:
    LicenseHeader:
      name: X-SOIPACK-License
      in: header
      required: false
      description: |
        Base64 kodlanmış lisans anahtarı. Import isteklerinde alternatif olarak `license` dosya alanı kullanılabilir.
        İçerik `SOIPACK_LICENSE_MAX_BYTES`/`SOIPACK_LICENSE_HEADER_MAX_BYTES` sınırlarını aşarsa
        istek `413 LICENSE_TOO_LARGE` yanıtıyla reddedilir.
      schema:
        type: string
  schemas:
    ErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              description: Hata ile ilgili ek bilgiler.
              additionalProperties: true
    StorageHealthResponse:
      type: object
      required:
        - provider
        - status
        - database
      properties:
        provider:
          type: string
          description: Aktif depolama sağlayıcısının sınıf adı veya tanımlayıcısı.
        status:
          type: string
          enum:
            - ok
        database:
          type: object
          required:
            - latencyMs
          properties:
            latencyMs:
              type: number
              format: double
              description: Sağlık denetimi sırasında ölçülen veritabanı sorgu gecikmesi (ms).
    ImportResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - warnings
        - outputs
      properties:
        id:
          type: string
          description: Import işlemi için belirlenen hash tabanlı kimlik.
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
          description: İş daha önce tamamlanmışsa true döner.
        createdAt:
          type: string
          format: date-time
        warnings:
          type: array
          items:
            type: string
        outputs:
          type: object
          required:
            - directory
            - workspace
          properties:
            directory:
              type: string
              description: Sunucu depolama alanında oluşturulan çalışma dizini.
            workspace:
              type: string
              description: workspace.json dosyasının göreli yolu.
    AnalyzeResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - exitCode
        - outputs
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
        createdAt:
          type: string
          format: date-time
        exitCode:
          type: integer
        outputs:
          type: object
          required:
            - directory
            - snapshot
            - traces
            - analysis
          properties:
            directory:
              type: string
            snapshot:
              type: string
            traces:
              type: string
            analysis:
              type: string
    ReportResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - outputs
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
        createdAt:
          type: string
          format: date-time
        outputs:
          type: object
          required:
            - directory
            - complianceHtml
            - complianceJson
            - traceHtml
            - gapsHtml
            - analysis
            - snapshot
            - traces
          properties:
            directory:
              type: string
            complianceHtml:
              type: string
            complianceJson:
              type: string
            traceHtml:
              type: string
            gapsHtml:
              type: string
            analysis:
              type: string
            snapshot:
              type: string
            traces:
              type: string
    PackResponse:
      type: object
      required:
        - id
        - reused
        - createdAt
        - manifestId
        - outputs
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        reused:
          type: boolean
        createdAt:
          type: string
          format: date-time
        manifestId:
          type: string
          description: Paketlenmiş manifestin ilk 12 karakterlik SHA-256 özeti.
        outputs:
          type: object
          required:
            - directory
            - manifest
            - archive
          properties:
            directory:
              type: string
            manifest:
              type: string
            archive:
              type: string
    AuditLogEntry:
      type: object
      required:
        - id
        - tenantId
        - actor
        - action
        - createdAt
      properties:
        id:
          type: string
          description: Denetim kaydının benzersiz kimliği.
        tenantId:
          type: string
          description: Kaydın ait olduğu kiracı kimliği.
        actor:
          type: string
          description: Olayı tetikleyen kullanıcı veya sistem.
        action:
          type: string
          description: Gerçekleştirilen eylemin adı.
        target:
          type: string
          nullable: true
          description: Eylemin hedef kaynağı.
        payload:
          type: object
          nullable: true
          additionalProperties: true
          description: Eylemle ilişkili isteğe bağlı ek veriler.
        createdAt:
          type: string
          format: date-time
          description: Kaydın oluşturulma zamanı.
    AuditLogListResponse:
      type: object
      required:
        - items
        - hasMore
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AuditLogEntry'
        hasMore:
          type: boolean
          description: Daha fazla kayıt olup olmadığını belirtir.
        nextOffset:
          type: integer
          nullable: true
          description: Sonraki sayfa için ofset değeri.
    JobSummary:
      type: object
      required:
        - id
        - kind
        - status
        - hash
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        kind:
          type: string
          enum: [import, analyze, report, pack]
        status:
          type: string
          enum: [queued, running, completed, failed]
        hash:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    JobError:
      type: object
      required:
        - statusCode
        - code
        - message
      properties:
        statusCode:
          type: integer
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true
    JobDetailsResponse:
      allOf:
        - $ref: '#/components/schemas/JobSummary'
        - type: object
          properties:
            result:
              oneOf:
                - type: object
                  additionalProperties: true
                - type: 'null'
            error:
              oneOf:
                - $ref: '#/components/schemas/JobError'
                - type: 'null'
    JobListResponse:
      type: object
      required:
        - jobs
      properties:
        jobs:
          type: array
          items:
            $ref: '#/components/schemas/JobSummary'
    JobMutationResponse:
      type: object
      required:
        - status
        - id
        - kind
      properties:
        status:
          type: string
        id:
          type: string
          pattern: '^[a-f0-9]{16}$'
        kind:
          type: string
          enum: [import, analyze, report, pack]
    ManifestFetchResponse:
      type: object
      required:
        - manifestId
        - jobId
        - manifest
      properties:
        manifestId:
          type: string
        jobId:
          type: string
          pattern: '^[a-f0-9]{16}$'
        manifest:
          type: object
          additionalProperties: true
paths:
  /health:
    get:
      operationId: getHealth
      summary: Sunucu sağlık durumu.
      security: []
      responses:
        '200':
          description: Sunucu çalışıyor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
        '400':
          description: Geçersiz istek.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /api/audit-logs:
    get:
      operationId: listAuditLogs
      summary: Denetim kayıtlarını listeler.
      description: Kiracının ve (yönetici yetkisi varsa) diğer kiracıların denetim olaylarını döndürür.
      security:
        - BearerAuth: []
      parameters:
        - name: tenantId
          in: query
          required: false
          description: Başka bir kiracının kayıtlarını görüntülemek için yönetici yetkisi gerekir.
          schema:
            type: string
        - name: actor
          in: query
          required: false
          description: Belirli bir kullanıcı veya sistem aktörü tarafından oluşturulan kayıtları filtreler.
          schema:
            type: string
        - name: action
          in: query
          required: false
          description: Eylem adına göre filtre uygular.
          schema:
            type: string
        - name: target
          in: query
          required: false
          description: Belirli bir hedef kaynağa ait kayıtları döndürür.
          schema:
            type: string
        - name: since
          in: query
          required: false
          description: Belirtilen ISO 8601 zamanından itibaren kayıtları döndürür.
          schema:
            type: string
            format: date-time
        - name: until
          in: query
          required: false
          description: Belirtilen ISO 8601 zamanına kadar olan kayıtları içerir.
          schema:
            type: string
            format: date-time
        - name: order
          in: query
          required: false
          schema:
            type: string
            enum: [asc, desc]
          description: Zaman sıralamasını belirler (varsayılan desc).
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: Döndürülecek maksimum kayıt sayısı.
        - name: offset
          in: query
          required: false
          schema:
            type: integer
            minimum: 0
          description: Sayfalama için ofset değeri.
      responses:
        '200':
          description: Denetim kayıtları başarıyla döndürüldü.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditLogListResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yetki yetersiz.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/import:
    post:
      operationId: createImportJob
      summary: Kanıt dosyalarını çalışma alanına aktarır.
      description: |
        Aynı dosya ve seçenek kombinasyonu tekrar gönderildiğinde aynı kimlikte sonuç üretir.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license:
                  type: string
                  format: binary
                  description: Lisans anahtarı dosyası. Başlıkla gönderilirse bu alan boş bırakılabilir.
                jira:
                  type: string
                  format: binary
                  description: Jira CSV dışa aktarımı.
                reqif:
                  type: string
                  format: binary
                  description: ReqIF gereksinim paketi.
                junit:
                  type: string
                  format: binary
                  description: JUnit XML test sonuçları.
                lcov:
                  type: string
                  format: binary
                  description: LCOV kapsam raporu.
                cobertura:
                  type: string
                  format: binary
                  description: Cobertura kapsam raporu.
                git:
                  type: string
                  format: binary
                  description: Git meta verisi (opsiyonel).
                objectives:
                  type: string
                  format: binary
                  description: Uyumluluk hedefleri JSON dosyası.
                projectName:
                  type: string
                projectVersion:
                  type: string
                level:
                  type: string
                  description: Sertifikasyon seviyesi (A-E).
      responses:
        '200':
          description: Import işlemi tamamlandı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImportResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/analyze:
    post:
      operationId: createAnalyzeJob
      summary: Çalışma alanından uyum analizi üretir.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - importId
              properties:
                importId:
                  type: string
                  description: Import işlemi kimliği.
                level:
                  type: string
                  description: Sertifikasyon seviyesi (A-E).
                projectName:
                  type: string
                projectVersion:
                  type: string
      responses:
        '200':
          description: Analiz tamamlandı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyzeResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Kaynak bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/report:
    post:
      operationId: createReportJob
      summary: Analiz çıktılarından rapor üretir.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - analysisId
              properties:
                analysisId:
                  type: string
                manifestId:
                  type: string
                  description: Rapor başlıklarında kullanılacak manifest kimliği.
      responses:
        '200':
          description: Rapor üretildi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Analiz bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/pack:
    post:
      operationId: createPackJob
      summary: Rapor çıktılarını arşivler.
      security:
        - BearerAuth: []
      parameters:
        - $ref: '#/components/parameters/LicenseHeader'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - reportId
              properties:
                reportId:
                  type: string
                packageName:
                  type: string
                  description: Oluşturulacak zip dosyası adı. Yalnızca `.zip` uzantılı ve harf/rakam, nokta, alt çizgi veya tire içeren düz dosya adları kabul edilir.
                  pattern: '^[A-Za-z0-9][A-Za-z0-9._-]*\.zip$'
      responses:
        '200':
          description: Paket başarıyla oluşturuldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackResponse'
        '400':
          description: İstek verisi hatalı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Rapor bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/jobs:
    get:
      operationId: listJobs
      summary: Kiracıya ait işleri listeler.
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: kind
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [import, analyze, report, pack]
          description: Döndürülecek iş türleri. Virgülle ayrılmış veya tekrarlanan parametreler desteklenir.
        - in: query
          name: status
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [queued, running, completed, failed]
          description: Döndürülecek iş durumları.
      responses:
        '200':
          description: İş listesi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobListResponse'
        '400':
          description: Geçersiz filtre parametresi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/jobs/{id}:
    get:
      operationId: getJob
      summary: Belirli bir işin durumunu döner.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: İş durumu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobDetailsResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İş bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      operationId: deleteJob
      summary: Tamamlanmış bir işin çıktısını kalıcı depolamadan siler.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: İş çıktıları temizlendi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMutationResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İş bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: İş henüz tamamlanmadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/jobs/{id}/cancel:
    post:
      operationId: cancelJob
      summary: Kuyrukta bekleyen bir işi iptal eder.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: İş iptal edildi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobMutationResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: İş bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: İş iptal edilemez durumda.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/reports/{id}/{asset}:
    get:
      operationId: getReportAsset
      summary: Üretilen rapor dosyalarını döner.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
        - in: path
          name: asset
          required: true
          schema:
            type: string
          description: Rapor dizini altındaki dosya adı.
      responses:
        '200':
          description: İstenen rapor dosyası.
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Rapor veya dosya bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/manifests/{manifestId}:
    get:
      operationId: getManifest
      summary: Paketlenmiş manifest içeriğini döner.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: manifestId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Manifest içeriği.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManifestFetchResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Manifest bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/packages/{id}:
    get:
      operationId: downloadPackage
      summary: Oluşturulmuş paket arşivini indirir.
      deprecated: true
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: Paket arşiv dosyası.
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Paket bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/packages/{id}/archive:
    get:
      operationId: downloadPackageArchive
      summary: Paket arşiv dosyasını doğrudan indirir.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: Paket arşiv dosyası.
          headers:
            Content-Disposition:
              description: İndirilen dosya adı.
              schema:
                type: string
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Paket bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/packages/{id}/manifest:
    get:
      operationId: downloadPackageManifest
      summary: Paket manifest dosyasını indirir.
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            pattern: '^[a-f0-9]{16}$'
      responses:
        '200':
          description: Manifest dosyası.
          headers:
            Content-Disposition:
              description: Manifest dosya adı.
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                additionalProperties: true
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Manifest bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/storage/health:
    get:
      operationId: getStorageHealth
      summary: Depolama sağlayıcısı ve veritabanı sağlık durumunu döndürür.
      description: |-
        Yalnızca yönetici kapsamına sahip belirteçlerle çağrılabilir. Aktif depolama
        sağlayıcısının adını ve veritabanına yapılan test sorgusunun gecikmesini
        rapor eder. Başarısız olursa hata ayrıntıları döner.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Depolama sağlık durumu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageHealthResponse'
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yönetici kapsamı gerekli.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Sağlık denetimi sırasında depolama veya veritabanı erişimi başarısız oldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/admin/cleanup:
    post:
      operationId: runRetentionCleanup
      summary: Saklama politikalarına göre eski iş çıktılarının temizliğini tetikler.
      description: |-
        Yalnızca yönetici kapsamına sahip belirteçlerle çağrılabilir. `SOIPACK_AUTH_ADMIN_SCOPES`
        listesinde tanımlanan kapsamların en az birine sahip erişim belirteci gerektirir.
        Zamanlanmış temizlik `SOIPACK_RETENTION_SWEEP_INTERVAL_MS` ayarlandığında
        arka planda otomatik olarak yürütülür; bu uç nokta aynı işi manuel olarak
        tetiklemek için kullanılabilir.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Temizlik işlemi özeti.
          content:
            application/json:
              schema:
                type: object
                required:
                  - status
                  - summary
                properties:
                  status:
                    type: string
                    enum:
                      - ok
                  summary:
                    type: array
                    description: Her saklama hedefi için temizlenen/korunan kayıt sayıları.
                    items:
                      type: object
                      required:
                        - target
                        - removed
                        - retained
                        - skipped
                        - configured
                      properties:
                        target:
                          type: string
                          description: Saklama politikası hedefi.
                          enum:
                            - uploads
                            - analyses
                            - reports
                            - packages
                        removed:
                          type: integer
                          minimum: 0
                        retained:
                          type: integer
                          minimum: 0
                        skipped:
                          type: integer
                          minimum: 0
                        configured:
                          type: boolean
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yönetici kapsamı eksik.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /metrics:
    get:
      operationId: getMetrics
      summary: Prometheus formatında gözlemlenebilirlik metriklerini döner.
      description: |-
        Yalnızca yönetici kapsamına sahip belirteçlerle çağrılabilir. `SOIPACK_AUTH_ADMIN_SCOPES`
        listesinde tanımlanan kapsamların en az birine sahip erişim belirteci gerektirir.
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Prometheus metrikleri.
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Kimlik doğrulama başarısız.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Yönetici kapsamı eksik.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
