version: "3.9"

services:
  server:
    image: soipack/server:latest
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      SOIPACK_AUTH_ISSUER: ${SOIPACK_AUTH_ISSUER:?SOIPACK_AUTH_ISSUER tanımlanmalıdır}
      SOIPACK_AUTH_AUDIENCE: ${SOIPACK_AUTH_AUDIENCE:?SOIPACK_AUTH_AUDIENCE tanımlanmalıdır}
      SOIPACK_AUTH_JWKS_URI: ${SOIPACK_AUTH_JWKS_URI:?SOIPACK_AUTH_JWKS_URI tanımlanmalıdır}
      SOIPACK_AUTH_TENANT_CLAIM: ${SOIPACK_AUTH_TENANT_CLAIM:-tenant}
      SOIPACK_AUTH_USER_CLAIM: ${SOIPACK_AUTH_USER_CLAIM:-sub}
      SOIPACK_AUTH_REQUIRED_SCOPES: ${SOIPACK_AUTH_REQUIRED_SCOPES:-soipack.api}
      SOIPACK_AUTH_ADMIN_SCOPES: ${SOIPACK_AUTH_ADMIN_SCOPES:-soipack.admin}
      SOIPACK_STORAGE_DIR: /app/data
      SOIPACK_SIGNING_KEY_PATH: /run/secrets/soipack-signing.pem
      SOIPACK_LICENSE_PUBLIC_KEY_PATH: /run/secrets/soipack-license.pub
      SOIPACK_TLS_KEY_PATH: /run/secrets/soipack-tls.key
      SOIPACK_TLS_CERT_PATH: /run/secrets/soipack-tls.crt
      SOIPACK_TLS_CLIENT_CA_PATH: ${SOIPACK_TLS_CLIENT_CA_PATH:-}
      SOIPACK_HEALTHCHECK_TOKEN: ${SOIPACK_HEALTHCHECK_TOKEN:?SOIPACK_HEALTHCHECK_TOKEN tanımlanmalıdır}
      SOIPACK_MAX_JSON_BODY_BYTES: ${SOIPACK_MAX_JSON_BODY_BYTES:-2097152}
      SOIPACK_RATE_LIMIT_IP_WINDOW_MS: ${SOIPACK_RATE_LIMIT_IP_WINDOW_MS:-60000}
      SOIPACK_RATE_LIMIT_IP_MAX_REQUESTS: ${SOIPACK_RATE_LIMIT_IP_MAX_REQUESTS:-300}
      SOIPACK_RATE_LIMIT_IP_MAX_KEYS: ${SOIPACK_RATE_LIMIT_IP_MAX_KEYS:-10000}
      SOIPACK_RATE_LIMIT_TENANT_WINDOW_MS: ${SOIPACK_RATE_LIMIT_TENANT_WINDOW_MS:-60000}
      SOIPACK_RATE_LIMIT_TENANT_MAX_REQUESTS: ${SOIPACK_RATE_LIMIT_TENANT_MAX_REQUESTS:-150}
      SOIPACK_RATE_LIMIT_TENANT_MAX_KEYS: ${SOIPACK_RATE_LIMIT_TENANT_MAX_KEYS:-10000}
      SOIPACK_TRUST_PROXY: ${SOIPACK_TRUST_PROXY:-false}
      PORT: ${PORT:-3443}
    ports:
      - "3443:3443"
    volumes:
      - ./data:/app/data
      # ./secrets klasöründe soipack-signing.pem ve soipack-license.pub dosyalarını bekler
      - ./secrets:/run/secrets:ro
    restart: unless-stopped
    healthcheck:
      test:
        - CMD-SHELL
        - >-
          node -e "const token=process.env.SOIPACK_HEALTHCHECK_TOKEN;
          if(!token){process.exit(1);}
          fetch('https://localhost:3443/health', {
            headers: { Authorization: 'Bearer ' + token }
          }).then((res) => {
            if(!res.ok){process.exit(1);}
          }).catch(() => process.exit(1));" 
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
