openapi: 3.1.0
info:
  title: SOIPack API
  version: 0.1.0
  description: >-
    Uyum kanıtlarını toplamak ve rapor akışlarını doğrulamak için kullanılan SOIPack
    REST API'sinin çekirdek uç noktaları. Tüm kimlik doğrulamalı istekler JWT
    bearer belirteci gerektirir ve hız limitleri aşılırsa `429` yanıtı döner.
servers:
  - url: https://api.example.com
    description: Örnek üretim sunucusu
paths:
  /health:
    get:
      summary: Sunucu sağlık durumu
      description: Kimliği doğrulanmamış sağlık kontrolü uç noktası.
      responses:
        '200':
          description: Sunucu çalışıyor.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /evidence:
    get:
      summary: Yüklenen kanıtları listele
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Kanıt kayıtlarının listesi.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EvidenceItem'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitedError'
  /evidence/upload:
    post:
      summary: Yeni kanıt yükle
      description: >-
        Base64 kodlu içeriği SHA-256 özetiyle birlikte yükleyerek yeni bir kanıt
        kaydı oluşturur. `metadata.sha256` alanı, sunucunun hesapladığı özetle
        eşleşmelidir.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvidenceUploadRequest'
      responses:
        '201':
          description: Kanıt başarıyla yüklendi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvidenceItem'
        '400':
          description: Geçersiz gövde, hash uyuşmazlığı veya boyut tutarsızlığı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitedError'
  /v1/import:
    post:
      summary: Import işini kuyruğa al
      description: >-
        Gereksinim, test, kapsam, tasarım ve statik analiz artefaktlarını çok
        parçalı form verisi olarak göndererek import → analyze → report pipeline'ını
        tetikler. Aynı dosya kombinasyonu tekrar gönderildiğinde iş önbellekten
        geri döndürülebilir. Dosya yüklemek yerine veya dosyalara ek olarak,
        Polarion, Jenkins, DOORS Next, Jama ya da Jira Cloud için uzaktan bağlayıcı
        yapılandırması (`connector`) göndererek kanıtların otomatik olarak alınmasını
        tetikleyebilirsiniz.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                license:
                  type: string
                  format: binary
                  description: Lisans anahtarı dosyası (başlıkla gönderilmezse).
                jira:
                  type: string
                  format: binary
                  description: Jira gereksinim CSV dışa aktarımı.
                jiraDefects:
                  type: array
                  description: Jira defect CSV dışa aktarımları; alan çoklu dosya kabul eder.
                  items:
                    type: string
                    format: binary
                reqif:
                  type: string
                  format: binary
                  description: ReqIF gereksinim paketi.
                junit:
                  type: string
                  format: binary
                  description: JUnit XML test sonuçları.
                lcov:
                  type: string
                  format: binary
                  description: LCOV kapsam raporu veya `.info` çıktısı.
                cobertura:
                  type: string
                  format: binary
                  description: Cobertura XML kapsam raporu.
                designCsv:
                  type: string
                  format: binary
                  description: Tasarım izlenebilirlik CSV dışa aktarımı.
                polyspace:
                  type: string
                  format: binary
                  description: Polyspace statik analiz arşivi.
                ldra:
                  type: string
                  format: binary
                  description: LDRA rapor arşivi.
                vectorcast:
                  type: string
                  format: binary
                  description: VectorCAST kapsam/test arşivi.
                qaLogs:
                  type: array
                  description: QA denetim günlükleri; birden fazla dosya desteklenir.
                  items:
                    type: string
                    format: binary
                connector:
                  $ref: '#/components/schemas/ImportConnectorPayload'
                  description: >-
                    Polarion, Jenkins, DOORS Next, Jama veya Jira Cloud bağlayıcılarından
                    kanıt çekmek için kullanılan yapılandırma. Sunucu gizli alanları "REDACTED"
                    olarak maskeleyerek kaydeder.
                  example:
                    type: jiraCloud
                    options:
                      site: avionics.atlassian.net
                      email: bot@example.com
                      apiToken: atlassian-api-token
                      projectKey: DO-178C
                git:
                  type: string
                  format: binary
                  description: Kaynak kodu veya yapı artefaktları için ZIP/TAR arşivi.
                objectives:
                  type: string
                  format: binary
                  description: Uyumluluk hedefleri JSON dosyası.
                projectName:
                  type: string
                projectVersion:
                  type: string
                level:
                  type: string
                  description: Sertifikasyon seviyesi (A-E).
                independentSources:
                  type: array
                  description: Bağımsız kaynak kimlikleri (JSON string olarak gönderilir).
                  items:
                    type: string
                independentArtifacts:
                  type: array
                  description: Bağımsız artefakt kimlikleri (JSON string olarak gönderilir).
                  items:
                    type: string
            encoding:
              connector:
                contentType: application/json
      responses:
        '202':
          description: Import işi kuyruğa alındı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobResource'
        '400':
          description: Gönderilen form verisi doğrulamayı geçemedi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitedError'
  /evidence/{id}:
    get:
      summary: Kanıt ayrıntılarını getir
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Kanıt kimliği.
      responses:
        '200':
          description: Kanıt kaydı döndürülür.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EvidenceItemWithContent'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Kanıt bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/RateLimitedError'
  /compliance:
    get:
      summary: Uyum kayıtlarını listele
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Kaydedilmiş uyum kayıtlarının listesi.
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ComplianceRecord'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitedError'
    post:
      summary: Yeni uyum kaydı oluştur
      description: >-
        Uyum matrisi, kapsam özetleri ve SHA-256 doğrulamasıyla birlikte yeni bir
        uyum kaydı oluşturur. Gereksinimlerde referans verilen kanıt kimliklerinin
        mevcut olması gerekir.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComplianceSubmission'
      responses:
        '201':
          description: Uyum kaydı oluşturuldu.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceRecord'
        '400':
          description: Uyum verisi doğrulamayı geçemedi.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '429':
          $ref: '#/components/responses/RateLimitedError'
  /compliance/{id}:
    get:
      summary: Uyum kaydını getir
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: Uyum kaydı kimliği.
      responses:
        '200':
          description: Uyum kaydının ayrıntıları.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceRecord'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Kayıt bulunamadı.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          $ref: '#/components/responses/RateLimitedError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: JWT kimlik doğrulaması başarısız oldu.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    RateLimitedError:
      description: İstek hızı sınırı aşıldı.
      headers:
        Retry-After:
          description: Saniye cinsinden önerilen bekleme süresi.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
            details:
              type: object
              additionalProperties: true
    EvidenceMetadata:
      type: object
      description: Kullanıcı tarafından sağlanan key/value metaveri.
      additionalProperties: true
    EvidenceItem:
      type: object
      properties:
        id:
          type: string
        filename:
          type: string
        sha256:
          type: string
          description: İçerik için onaltılık SHA-256 özeti.
        size:
          type: integer
          format: int64
        uploadedAt:
          type: string
          format: date-time
        metadata:
          $ref: '#/components/schemas/EvidenceMetadata'
        contentEncoding:
          type: string
          enum: [base64]
      required:
        - id
        - filename
        - sha256
        - size
        - uploadedAt
        - metadata
        - contentEncoding
    EvidenceItemWithContent:
      allOf:
        - $ref: '#/components/schemas/EvidenceItem'
        - type: object
          properties:
            content:
              type: string
              description: Base64 kodlu içerik.
    EvidenceUploadRequest:
      type: object
      required:
        - filename
        - content
        - metadata
      properties:
        filename:
          type: string
        content:
          type: string
          description: Base64 kodlu dosya içeriği.
        metadata:
          type: object
          properties:
            sha256:
              type: string
              description: İçerik için beklenen SHA-256 özeti.
            size:
              type: integer
              description: Bayt cinsinden beklenen dosya boyutu.
          additionalProperties: true
    ComplianceRequirement:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: string
        status:
          type: string
          enum: [covered, partial, missing]
        title:
          type: string
        evidenceIds:
          type: array
          items:
            type: string
    ComplianceSummary:
      type: object
      properties:
        total:
          type: integer
        covered:
          type: integer
        partial:
          type: integer
        missing:
          type: integer
      required: [total, covered, partial, missing]
    ComplianceMatrix:
      type: object
      properties:
        project:
          type: string
        level:
          type: string
        generatedAt:
          type: string
          format: date-time
        summary:
          $ref: '#/components/schemas/ComplianceSummary'
        requirements:
          type: array
          items:
            $ref: '#/components/schemas/ComplianceRequirement'
      required: [summary, requirements]
    CoverageSummary:
      type: object
      properties:
        statements:
          type: number
        branches:
          type: number
        functions:
          type: number
        lines:
          type: number
    ComplianceRecord:
      type: object
      properties:
        id:
          type: string
        sha256:
          type: string
        createdAt:
          type: string
          format: date-time
        matrix:
          $ref: '#/components/schemas/ComplianceMatrix'
        coverage:
          $ref: '#/components/schemas/CoverageSummary'
        metadata:
          type: object
          additionalProperties: true
      required:
        - id
        - sha256
        - createdAt
        - matrix
        - coverage
    ComplianceSubmission:
      type: object
      required:
        - matrix
        - coverage
        - sha256
      properties:
        matrix:
          $ref: '#/components/schemas/ComplianceMatrix'
        coverage:
          $ref: '#/components/schemas/CoverageSummary'
        metadata:
          type: object
          additionalProperties: true
        sha256:
          type: string
    JobResource:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
          enum: [queued, running, completed, failed]
        hash:
          type: string
        reused:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
      required:
        - id
        - status
        - hash
        - reused
        - createdAt
        - updatedAt
    ImportConnectorPayload:
      type: object
      description: >-
        Uzak bağlayıcı yapılandırması. Sunucu iş metaverisinde ve günlüklerde gizli
        alanları "REDACTED" olarak maskeleyerek saklar.
      required:
        - type
        - options
      properties:
        type:
          type: string
          description: Kullanılacak bağlayıcı türü.
          enum: [polarion, jenkins, doorsNext, jama, jiraCloud]
        options:
          description: Bağlayıcıya özgü kimlik doğrulama ve kapsam ayarları.
          oneOf:
            - $ref: '#/components/schemas/PolarionConnectorOptions'
            - $ref: '#/components/schemas/JenkinsConnectorOptions'
            - $ref: '#/components/schemas/DoorsNextConnectorOptions'
            - $ref: '#/components/schemas/JamaConnectorOptions'
            - $ref: '#/components/schemas/JiraCloudConnectorOptions'
    PolarionConnectorOptions:
      type: object
      description: Polarion ALM projeleri için gerekli kimlik doğrulama bilgileri.
      required: [baseUrl, username]
      properties:
        baseUrl:
          type: string
          format: uri
          description: Polarion sunucusunun taban URL’si.
        projectId:
          type: string
          description: Polarion proje kimliği. project alanı yerine kullanılabilir.
        project:
          type: string
          description: Polarion proje kısa adı. projectId alanı yerine kullanılabilir.
        username:
          type: string
          description: Polarion kullanıcı adı.
        password:
          type: string
          description: Polarion hesabı için parola. token alanı yerine kullanılabilir.
        token:
          type: string
          description: Polarion erişim belirteci. password alanı yerine kullanılabilir.
    JenkinsConnectorOptions:
      type: object
      description: Jenkins işleri üzerinden veri indirmek için kullanılan alanlar.
      required: [baseUrl, job, username]
      properties:
        baseUrl:
          type: string
          format: uri
          description: Jenkins sunucusunun taban URL’si.
        job:
          type: string
          description: Çalıştırılacak Jenkins işinin adı.
        username:
          type: string
          description: Jenkins kullanıcısı.
        apiToken:
          type: string
          description: Jenkins API belirteci. token veya password yerine kullanılabilir.
        token:
          type: string
          description: Jenkins erişim belirteci. apiToken veya password yerine kullanılabilir.
        password:
          type: string
          description: Jenkins kullanıcısının parolası. apiToken veya token yerine kullanılabilir.
    DoorsNextOAuthOptions:
      type: object
      description: Doors Next OAuth 2.0 istemci kimlik bilgileri.
      required: [tokenUrl, clientId, clientSecret]
      properties:
        tokenUrl:
          type: string
          format: uri
          description: OAuth belirteci alınacak uç nokta.
        clientId:
          type: string
          description: OAuth istemci kimliği.
        clientSecret:
          type: string
          description: OAuth istemci sırrı.
        scope:
          type: string
          description: İsteğe bağlı OAuth kapsam değeri.
    DoorsNextConnectorOptions:
      type: object
      description: IBM DOORS Next projelerini senkronize etmek için gerekli ayarlar.
      required: [baseUrl]
      properties:
        baseUrl:
          type: string
          format: uri
          description: DOORS Next sunucusunun taban URL’si.
        project:
          type: string
          description: İçe aktarılacak proje adı. projectArea alanı yerine kullanılabilir.
        projectArea:
          type: string
          description: İçe aktarılacak proje alanı. project alanı yerine kullanılabilir.
        username:
          type: string
          description: Temel kimlik doğrulaması için kullanıcı adı. password ile birlikte kullanılmalıdır.
        password:
          type: string
          description: Temel kimlik doğrulaması için parola. username ile birlikte kullanılmalıdır.
        accessToken:
          type: string
          description: DOORS Next erişim belirteci. username/password veya oauth yerine kullanılabilir.
        oauth:
          $ref: '#/components/schemas/DoorsNextOAuthOptions'
          description: OAuth 2.0 istemci kimlik bilgileri.
    JamaConnectorOptions:
      type: object
      description: Jama Connect ile entegrasyon için kimlik doğrulama alanları.
      required: [baseUrl]
      properties:
        baseUrl:
          type: string
          format: uri
          description: Jama Connect sunucusunun taban URL’si.
        project:
          type: string
          description: İçe aktarılacak projenin kısa adı. projectId alanı yerine kullanılabilir.
        projectId:
          type: string
          description: İçe aktarılacak projenin kimliği. project alanı yerine kullanılabilir.
        clientId:
          type: string
          description: OAuth istemci kimliği. clientSecret ile birlikte kullanılmalıdır.
        clientSecret:
          type: string
          description: OAuth istemci sırrı. clientId ile birlikte kullanılmalıdır.
        apiToken:
          type: string
          description: Jama API belirteci. clientId/clientSecret yerine kullanılabilir.
    JiraCloudConnectorOptions:
      type: object
      description: Jira Cloud projelerinden iş öğesi almak için gereken alanlar.
      required: [site, email, apiToken, projectKey]
      properties:
        site:
          type: string
          description: Jira Cloud site alan adı (ör. example.atlassian.net).
        email:
          type: string
          format: email
          description: Jira Cloud kullanıcısının e-posta adresi.
        apiToken:
          type: string
          description: Atlassian API belirteci.
        projectKey:
          type: string
          description: Jira projesinin anahtar değeri.
        baseUrl:
          type: string
          format: uri
          description: Opsiyonel özel Jira taban URL’si. Varsayılan olarak site alanı kullanılır.
